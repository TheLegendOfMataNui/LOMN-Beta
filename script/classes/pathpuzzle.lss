class pathpuzzle {
    property parent;
    property tiggerboxid;
    property platformarray;
    property meltpickup;
    property hittrigerbox;
    
    method pathpuzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        var var2;
        var var3;
        var var4;
        var var5;
        var var6;
        gcareadirector::setnearestmax(50);
        gcmodeldirector::setnearestmax(50);
        this.tiggerboxid = 0;
        this.platformarray = [ new platform("plt0") ];
        var1 = 0;
        while ((this.platformarray.__length - 1) >= var1) {
            this.platformarray[var1].initfull("pl00", "Root/data/levels/lev4/crss", -4, -1, -4, 4, 1, 4);
            this.platformarray[var1].obj.setobjscale(0.4);
            this.platformarray[var1].settweakable();
            this.platformarray[0].obj.setalpha(0.1);
            var1 = var1 + 1;
        }
        this.platformarray[0].setuppath([ new basicpoint(416, -293, 1229), 
            new basicpoint(416, -293, 1229), 
            new basicpoint(403, -311, 1231), 
            new basicpoint(371, -311, 1322), 
            new basicpoint(494, -311, 1346), 
            new basicpoint(494, -243, 1346), 
            new basicpoint(494, -246, 1312), 
            new basicpoint(494, -246, 1312), 
            new basicpoint(494, -243, 1346), 
            new basicpoint(494, -311, 1346), 
            new basicpoint(371, -311, 1322), 
            new basicpoint(403, -311, 1231) ], [ 2, 
            10, 
            10, 
            10, 
            10, 
            10, 
            2, 
            10, 
            10, 
            10, 
            10, 
            10 ]);
        var2 = gcsaver::finditem(scslosifoundation::stringtoidentifier("crst"));
        if (var2 == 0) {
            this.meltpickup = new lego_pickup("crst", 0, 5, "item", 6, 1);
            this.meltpickup.initfull();
            this.meltpickup.show();
            this.meltpickup.setcondition(8192);
            this.meltpickup.setquest(3);
        }
        var3 = gcareadirector::gethive(scslosifoundation::stringtoidentifier("ghv0"));
        gchive::setmaxcreatures(var3, 2);
        gchive::setcreaturetype(var3, scslosifoundation::stringtoidentifier("bugz"));
        gchive::setspawnrate(var3, 4);
        var4 = gcareadirector::gethive(scslosifoundation::stringtoidentifier("ghv1"));
        gchive::setmaxcreatures(var4, 2);
        gchive::setcreaturetype(var4, scslosifoundation::stringtoidentifier("bugz"));
        gchive::setspawnrate(var4, 4);
        var5 = gcareadirector::gethive(scslosifoundation::stringtoidentifier("ghv2"));
        gchive::setmaxcreatures(var5, 2);
        gchive::setcreaturetype(var5, scslosifoundation::stringtoidentifier("bugz"));
        gchive::setspawnrate(var5, 4);
        var6 = gcareadirector::gethive(scslosifoundation::stringtoidentifier("ghv2"));
        gchive::setmaxcreatures(var6, 2);
        gchive::setcreaturetype(var6, scslosifoundation::stringtoidentifier("bugz"));
        gchive::setspawnrate(var6, 4);
        this.hittrigerbox = 0;
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var var2;
        var var3;
        var var4;
        var var5;
        var1 = null;
        var2 = null;
        var3 = null;
        var4 = null;
        var5 = 0;
        while ((this.platformarray.__length - 1) >= var5) {
            this.platformarray[var5].remove();
            this.platformarray[var5] = null;
            var5 = var5 + 1;
        }
        this.platformarray = null;
        if (!(this.meltpickup == null)) {
            this.meltpickup.cleanupfull();
            this.meltpickup = null;
        }
        return null;
    }
    
    method show() {
        var var1;
        var1 = 0;
        while ((this.platformarray.__length - 1) >= var1) {
            this.platformarray[var1].show();
            var1 = var1 + 1;
        }
        return null;
    }
    
    method hide() {
        var var1;
        var1 = 0;
        while ((this.platformarray.__length - 1) >= var1) {
            this.platformarray[var1].hide();
            var1 = var1 + 1;
        }
        return null;
    }
    
    method process(param1) {
        var var1;
        var1 = 0;
        while ((this.platformarray.__length - 1) >= var1) {
            this.platformarray[var1].process(param1);
            var1 = var1 + 1;
        }
        return null;
    }
    
    method initshort() {
        globalclass.player.unkill();
        globalclass.player.actor.setpos(390.1, 0 - 259.2, 1451);
        globalclass.player.actor.setorientation(155);
        if (this.hittrigerbox) {
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("tb01"), 0);
            this.parent.level.cam.setaimode(11);
            this.hittrigerbox = 0;
        }
        return null;
    }
    
    method onevent(param1) {
        var var1;
        var1 = 0;
        while ((this.platformarray.__length - 1) >= var1) {
            this.platformarray[var1].onevent(param1);
            var1 = var1 + 1;
        }
        if (param1.eventid == 3) {
            this.hittrigerbox = 1;
            this.parent.level.cam.setaimode(7);
            gccollisionphysicsgroup::spinmask(1.2);
        }
        else if (param1.eventid == 27) {
            if (this.hittrigerbox) {
                globalclass.player.kill();
            }
            else {
                this.initshort();
            }
        }
        else if (param1.eventid == 46) {
            if (this.hittrigerbox) {
                this.initshort();
            }
            else {
                gccollisionphysicsgroup::spinmask(1.2);
            }
        }
        else if (param1.eventid == 1002) {
            if (param1.args[0]) {
                this.platformarray[0].obj.setalpha(1);
            }
            else {
                this.platformarray[0].obj.setalpha(0.1);
            }
        }
        else if (param1.eventid == 7) {
            if (param1.args[2] == scslosifoundation::stringtoidentifier("Ecut")) {
                gcstaticsoundsptrarray::playtablesound(149);
            }
        }
        else if (param1.eventid == 1) {
            
        }
        return null;
    }
    
    method input(param1) {
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
}