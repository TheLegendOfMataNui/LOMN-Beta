class strt2_puzzle {
    property parent;
    property door;
    property callev_safe_time_once;
    property hiveinc;
    
    method strt2_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var hive1handle;
        var hive2handle;
        var tohunga;
        this.hiveinc = 0;
        gclightdirector::setcavelighting(0);
        this.door = new lego_moveableobject("drs0");
        this.door.initfull();
        this.callev_safe_time_once = 1;
        hive1handle = gcareadirector::gethive(scslosifoundation::stringtoidentifier("ghv0"));
        gchive::setmaxcreatures(hive1handle, 8);
        gchive::setcreaturetype(hive1handle, scslosifoundation::stringtoidentifier("crb1"));
        gchive::setspawnrate(hive1handle, 5);
        hive2handle = gcareadirector::gethive(scslosifoundation::stringtoidentifier("ghv1"));
        gchive::setmaxcreatures(hive2handle, 8);
        gchive::setcreaturetype(hive2handle, scslosifoundation::stringtoidentifier("crb1"));
        gchive::setspawnrate(hive2handle, 5);
        tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vlgr"), 0);
        gccharacter::settohunga(tohunga, rgba(0, 0, 255, 255), rgba(0, 0, 255, 255), scslosifoundation::stringtoidentifier("mk7a"));
        gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
        gccharacter::setupmoveable(tohunga, 1.5, 0.8, 1, 0, 0);
        gccharacter::setsplitanimation(tohunga, scslosifoundation::stringtoidentifier("d000"), -1);
        gccharacter::setorientation(tohunga, 250);
        return null;
    }
    
    method cleanupfull() {
        if (this.door != null) {
            this.door.cleanupfull();
            this.door = null;
        }
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 44) {
            if (this.callev_safe_time_once) {
                if (this.parent.enterstartid == scslosifoundation::stringtoidentifier("str1")) {
                    this.movedoorup();
                }
                this.callev_safe_time_once = 0;
            }
        }
        else if (param1.eventid == 51) {
            if (param1.args[1] == 1) {
                this.hiveinc = this.hiveinc + 1;
                if (this.hiveinc >= 2) {
                    debug::print("**** CONGRATS PUZZLE SOLVED");
                    this.movedoorup();
                }
            }
            else if (param1.args[1] == 0) {
                debug::print("********* YEAH YOU HAVE KILLED A HIVE!!");
            }
        }
        else if (param1.eventid == 46) {
            gccollisionphysicsgroup::spinmask(0.7);
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("tb00"), 0);
            globalclass.player.unkill();
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("g000"));
            this.parent.level.cam.setaimode(11);
            globalclass.player.actor.setinputstate("ninp");
            this.callev_safe_time_once = 1;
        }
        else if (param1.eventid == 3) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tb00")) {
                globalclass.player.kill();
                gcstaticsoundsptrarray::playtablesound(1048);
                this.parent.level.cam.setaimode(7);
                globalclass.player.actor.setinputstate("none");
            }
        }
        return null;
    }
    
    method input(param1) {
        if (param1.button == 90) {
            if (param1.event == 2) {
                this.movedoorup();
            }
        }
        if (param1.button == 88) {
            if (param1.event == 2) {
                this.cheat();
            }
        }
        return null;
    }
    
    method cheat() {
        var var1;
        var1 = new scriptevent(51, [ 0, 
            1 ]);
        var1.send();
        return null;
    }
    
    method movedoorup() {
        var var1;
        var var2;
        var var3;
        var1 = this.door.getx();
        var2 = this.door.gety() + 9.0;
        var3 = this.door.getz();
        this.door.interpolate(var1, var2, var3, 1.5);
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
}