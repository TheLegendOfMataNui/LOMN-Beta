class lego_inventoryscreen {
    property inventoryscreen;
    property inventorybackground;
    property defaultitems;
    property noblemasks;
    property greatmasks;
    property questitems;
    property tokens;
    property tokencount;
    property tokentext;    
    property ammo;
    property ammocount;
    property ammosprite;
    property ammotext;
    property shown;
    property width;
    property xpos;
    property ypos;
  
    method lego_inventoryscreen() {
        return null;
    }
    
    method initfull() {     
        this.width = gcgame::getresolutionwidth();
        this.xpos = screenx - 730;
        this.ypos = screeny - 100;
        this.inventorybackground = [ new ss_basesprite("Root/Data/Art/MenuArt/status_background", 0, 0, 0, 853, 480) ];
        
        this.defaultitems = [
            new ss_basesprite("Root/Data/Art/stONUABIG", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/StoneOnua", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stGALIBIG", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/StoneGali", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stPOHATUBIG", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/StonePohatu", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stKOPAKABIG", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/StoneKopaka", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stLEWABIG", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/StoneLewa", 0, 0, 0, 852, 480),        
            new ss_basesprite("Root/Data/Art/stTAHUBIG", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/StoneTahu", 0, 0, 0, 852, 480) ];
        
        this.noblemasks = [
            new ss_basesprite("Root/Data/Art/stRuru", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stHuna", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stRau", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stKomau", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stMatatu", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stMahiki", 0, 0, 0, 852, 480) ];

        this.greatmasks = [
            new ss_basesprite("Root/Data/Art/stPakari", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stKaukau", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stKakama", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stAkaku", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stMiru", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stHau", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/stVahi", 0, 0, 0, 852, 480) ];

        this.questitems = [
            new ss_basesprite("Root/Data/Art/OnuaQOdisk", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/OnuaQOpick", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/OnuaQObug", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/GaliQOcolordisk", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/GaliQOgear", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/GaliQO3", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/PohatuQOdisk", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/PohatuQOpick", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/PohatuQO3", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/KppakaQOdisk", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/KppakaQO2", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/KppakaQOcrystal", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/LewaQOdisk", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/LewaQO2", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/LewaQOspider", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/TahuQOdisk", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/TahuQO2", 0, 0, 0, 852, 480),
            new ss_basesprite("Root/Data/Art/TahuQObug", 0, 0, 0, 852, 480) ];      
        return null;
    }
    
    method cleanupfull() {
        this.inventoryscreen = null;
        this.defaultitems = null;
        this.noblemasks = null;
        this.greatmasks = null;
        this.questitems = null;
        this.tokens = null;
        this.tokentext = null;        
        this.ammo = null;
        this.ammosprite = null;
        this.ammotext = null;
        this.width = null;
        return null;
    }
    
    method show() {
        //Show Inventory Elements
        var inventoryscreen = 0;
        this.inventoryscreen = [ ];
        this.processdefaultitems();
        this.processquests();
        this.processmasks();
        while ((this.inventoryscreen.__length - 1) >= inventoryscreen) {               
            this.inventoryscreen[inventoryscreen].initfull();
            this.inventoryscreen[inventoryscreen].add();
            this.inventoryscreen[inventoryscreen].show();
            if (this.width == 640.000000) {        
                this.inventoryscreen[inventoryscreen].setpos(-113, 0, 753, 480);        
                this.xpos = screenx - 630;
            }
            inventoryscreen = inventoryscreen + 1; 
        }                
        //Show Tokens
        this.tokencount = __tostring(globalclass.hud.tokens.tcount);
        this.tokens = new gs_lego_animatesprite("Root/data/art/pickups/onuatoken/onua_token", 0, 29, 1, this.xpos, this.ypos, 0, this.xpos + 32, this.ypos + 32);
        this.tokentext = new gs_legotext("Root/Data/Art/Fonts/BionicleFont", " -  " + this.tokencount, (this.xpos + 32) + 5, (this.ypos + 16), 0, 1.2, 0, 4, 0);
        this.tokens.initfull();
        this.tokens.add();
        this.tokens.show();
        this.tokens.startanimate();
        this.tokentext.initfull();
        this.tokentext.add();
        this.tokentext.show();  
        this.setsprite();
        //Show Ammo
        this.ammocount = __tostring(globalclass.hud.ammo.count);
        this.ammo = new gs_lego_animatesprite(this.ammosprite, 0, 23, 1, this.xpos, (this.ypos + 26), 0, this.xpos + 32, this.ypos + 58);
        this.ammotext = new gs_legotext("Root/Data/Art/Fonts/BionicleFont", " -  " + this.ammocount, (this.xpos + 32) + 5, (this.ypos + 42), 0, 1.2, 0, 4, 0);
        this.ammo.initfull();
        this.ammo.add();
        this.ammo.show();
        this.ammo.startanimate();
        this.ammotext.initfull();
        this.ammotext.add();
        this.ammotext.show();    
        this.setsprite();
        this.shown = 1;
        globalclass.hud.hide();
        globalclass.pause.toggleinput(0);
        return null;
    }
    
    method hide() {
        //Hide Inventory Elements
        var inventoryscreen = 0;
        while ((this.inventoryscreen.__length - 1) >= inventoryscreen) {
            this.inventoryscreen[inventoryscreen].cleanupfull();
            this.inventoryscreen[inventoryscreen] = null;
            inventoryscreen = inventoryscreen + 1;
        }
        //Hide Tokens
        this.tokens.hide();
        this.tokens.remove();
        this.tokens.cleanupfull();
        this.tokentext.hide();
        this.tokentext.remove();
        this.tokentext.cleanupfull();    
        //Hide Ammo
        this.ammo.hide();
        this.ammo.remove();
        this.ammo.cleanupfull();
        this.ammotext.hide();
        this.ammotext.remove();
        this.ammotext.cleanupfull();
        if (globalclass.pause.ispaused == 1) {
            globalclass.pause.show();
        }
        this.shown = 0;
        globalclass.hud.show();
        globalclass.pause.toggleinput(1);
        return null;
    }
    
    method process(param1) {
        if (this.shown == 1) {
            this.tokens.process();
            this.ammo.process();
        }
        return null;
    }
    
    method input(param1) {
        if (this.shown == 1) {
            if ((param1.event == 2) && (param1.button == 251)) {
                this.hide();
            }
        }
        return null;
    }

    method onevent(param1) {
        return null;
    }

    method processdefaultitems() {
        var defaultitems = 0;
        var noblemasks = 0;
        var greatmasks = 0;
        this.inventoryscreen.__append(this.inventorybackground[0]);
        if (gcareadirector::getcurrentlevel() == scslosifoundation::stringtoidentifier("lev1")) {
            //Default Items
             while (0 >= defaultitems) {
                this.inventoryscreen.__append(this.defaultitems[defaultitems]);
                defaultitems = defaultitems + 1;
            }
            //Great Masks
             while (0 >= greatmasks) {
                this.inventoryscreen.__append(this.greatmasks[greatmasks]); 
                greatmasks = greatmasks + 1;
            }
        }
        else if (gcareadirector::getcurrentlevel() == scslosifoundation::stringtoidentifier("lev2")) {
            //Default Items
             while (2 >= defaultitems) {
                this.inventoryscreen.__append(this.defaultitems[defaultitems]); 
                defaultitems = defaultitems + 1;
            }
            //Noble Masks
             while (1 >= noblemasks) {
                this.inventoryscreen.__append(this.noblemasks[noblemasks]);
                noblemasks = noblemasks + 1;
            }   
            //Great Masks
             while (0 >= greatmasks) {
                this.inventoryscreen.__append(this.greatmasks[greatmasks]);  
                greatmasks = greatmasks + 1;
            }      
        }        
        else if (gcareadirector::getcurrentlevel() == scslosifoundation::stringtoidentifier("lev3")) {
            //Default Items
             while (4 >= defaultitems) {
                this.inventoryscreen.__append(this.defaultitems[defaultitems]);  
                defaultitems = defaultitems + 1;
            }
            //Noble Masks
             while (2 >= noblemasks) {
                this.inventoryscreen.__append(this.noblemasks[noblemasks]); 
                noblemasks = noblemasks + 1;
            }   
            //Great Masks
             while (1 >= greatmasks) {
                this.inventoryscreen.__append(this.greatmasks[greatmasks]);  
                greatmasks = greatmasks + 1;
            }            
        }        
        else if (gcareadirector::getcurrentlevel() == scslosifoundation::stringtoidentifier("lev4")) {
            //Default Items
             while (6 >= defaultitems) {
                this.inventoryscreen.__append(this.defaultitems[defaultitems]); 
                defaultitems = defaultitems + 1;
            }
            //Noble Masks
             while (3 >= noblemasks) {
                this.inventoryscreen.__append(this.noblemasks[noblemasks]); 
                noblemasks = noblemasks + 1;
            }   
            //Great Masks
             while (2 >= greatmasks) {
                this.inventoryscreen.__append(this.greatmasks[greatmasks]); 
                greatmasks = greatmasks + 1;
            }            
        }        
        else if (gcareadirector::getcurrentlevel() == scslosifoundation::stringtoidentifier("lev5")) {
            //Default Items
             while (8 >= defaultitems) {
                this.inventoryscreen.__append(this.defaultitems[defaultitems]); 
                defaultitems = defaultitems + 1;
            } 
            //Noble Masks
             while (4 >= noblemasks) {
                this.inventoryscreen.__append(this.noblemasks[noblemasks]); 
                noblemasks = noblemasks + 1;
            }   
            //Great Masks
             while (3 >= greatmasks) {
                this.inventoryscreen.__append(this.greatmasks[greatmasks]);  
                greatmasks = greatmasks + 1;
            }            
        }        
        else if (gcareadirector::getcurrentlevel() == scslosifoundation::stringtoidentifier("lev6")) {
            //Default Items
             while (10 >= defaultitems) {
                this.inventoryscreen.__append(this.defaultitems[defaultitems]); 
                defaultitems = defaultitems + 1;
            }
            //Noble Masks
             while (5 >= noblemasks) {
                this.inventoryscreen.__append(this.noblemasks[noblemasks]);  
                noblemasks = noblemasks + 1;
            }   
            //Great Masks
             while (4 >= greatmasks) {
                this.inventoryscreen.__append(this.greatmasks[greatmasks]); 
                greatmasks = greatmasks + 1;
            }            
        }        
        else if (gcareadirector::getcurrentlevel() == scslosifoundation::stringtoidentifier("lev7")) {
            //Default Items
             while (11 >= defaultitems) {
                this.inventoryscreen.__append(this.defaultitems[defaultitems]); 
                defaultitems = defaultitems + 1;
            }
            //Noble Masks
             while (5 >= noblemasks) {
                this.inventoryscreen.__append(this.noblemasks[noblemasks]);  
                noblemasks = noblemasks + 1;
            }   
            //Great Masks
             while (6 >= greatmasks) {
                this.inventoryscreen.__append(this.greatmasks[greatmasks]); 
                greatmasks = greatmasks + 1;
            }                
        }               
        return null;
    }

    method processquests() {
        //Onua
        if (GcSaver::QuestComplete(1, 1)) {
           this.inventoryscreen.__append(this.questitems[0]); 
        }
        if (GcSaver::QuestComplete(1, 2)) {
           this.inventoryscreen.__append(this.questitems[1]); 
        }
        if (GcSaver::QuestComplete(1, 3)) {
           this.inventoryscreen.__append(this.questitems[2]); 
        }        
        if (gcsaver::finditema(scslosifoundation::stringtoidentifier("ston"), scslosifoundation::stringtoidentifier("mdmn"))) {
           this.inventoryscreen.__append(this.defaultitems[1]); 
        }        

        //Gali
        if (GcSaver::QuestComplete(2, 1)) {
           this.inventoryscreen.__append(this.questitems[3]); 
        }
        if (GcSaver::QuestComplete(2, 2)) {
           this.inventoryscreen.__append(this.questitems[4]); 
        }
        if (GcSaver::QuestComplete(2, 3)) {
           this.inventoryscreen.__append(this.questitems[5]); 
        }        
        if (gcsaver::finditema(scslosifoundation::stringtoidentifier("ston"), scslosifoundation::stringtoidentifier("hydr"))) {
           this.inventoryscreen.__append(this.defaultitems[3]); 
        }

        //Pohatu
        if (GcSaver::QuestComplete(3, 1)) {
           this.inventoryscreen.__append(this.questitems[6]); 
        }
        if (GcSaver::QuestComplete(3, 2)) {
           this.inventoryscreen.__append(this.questitems[7]); 
        }
        if (GcSaver::QuestComplete(3, 3)) {
           this.inventoryscreen.__append(this.questitems[8]); 
        }        
        if (gcsaver::finditema(scslosifoundation::stringtoidentifier("ston"), scslosifoundation::stringtoidentifier("rkmn"))) {
           this.inventoryscreen.__append(this.defaultitems[5]); 
        }
        
        //Kopaka
        if (GcSaver::QuestComplete(4, 1)) {
           this.inventoryscreen.__append(this.questitems[9]); 
        }
        if (GcSaver::QuestComplete(4, 2)) {
           this.inventoryscreen.__append(this.questitems[10]); 
        }
        if (GcSaver::QuestComplete(4, 3)) {
           this.inventoryscreen.__append(this.questitems[11]); 
        }        
        if (gcsaver::finditema(scslosifoundation::stringtoidentifier("ston"), scslosifoundation::stringtoidentifier("icmn"))) {
           this.inventoryscreen.__append(this.defaultitems[7]); 
        }

        //Lewa
        if (GcSaver::QuestComplete(5, 1)) {
           this.inventoryscreen.__append(this.questitems[12]); 
        }
        if (GcSaver::QuestComplete(5, 2)) {
           this.inventoryscreen.__append(this.questitems[13]); 
        }
        if (GcSaver::QuestComplete(5, 3)) {
           this.inventoryscreen.__append(this.questitems[14]); 
        }        
        if (gcsaver::finditema(scslosifoundation::stringtoidentifier("ston"), scslosifoundation::stringtoidentifier("wdmn"))) {
           this.inventoryscreen.__append(this.defaultitems[9]); 
        }

        //Tahu
        if (GcSaver::QuestComplete(6, 1)) {
           this.inventoryscreen.__append(this.questitems[15]); 
        }
        if (GcSaver::QuestComplete(6, 2)) {
           this.inventoryscreen.__append(this.questitems[16]); 
        }
        if (GcSaver::QuestComplete(6, 3)) {
           this.inventoryscreen.__append(this.questitems[17]); 
        }        
        if (gcsaver::finditema(scslosifoundation::stringtoidentifier("ston"), scslosifoundation::stringtoidentifier("drgn"))) {
           this.inventoryscreen.__append(this.defaultitems[11]); 
        }
        return null;
    }    

    method processmasks() {
        //Onua
        if (gcsaver::findmaska(scslosifoundation::stringtoidentifier("mskv"), scslosifoundation::stringtoidentifier("pzzl"))) {
           this.inventoryscreen.__append(this.noblemasks[0]); 
        }
        if (gcsaver::findmaska(scslosifoundation::stringtoidentifier("mskc"), scslosifoundation::stringtoidentifier("spcv"))) {
            this.inventoryscreen.__append(this.noblemasks[1]); 
        }

        //Gali
        if (gcsaver::findmaska(scslosifoundation::stringtoidentifier("mk9a"), scslosifoundation::stringtoidentifier("bech"))) {
            this.inventoryscreen.__append(this.noblemasks[2]); 
        }
        if (gcsaver::findmaska(scslosifoundation::stringtoidentifier("mask"), scslosifoundation::stringtoidentifier("mwat"))) {
            this.inventoryscreen.__append(this.greatmasks[1]); 
        }

        //Pohatu
        if (gcsaver::findmaska(scslosifoundation::stringtoidentifier("mska"), scslosifoundation::stringtoidentifier("blcv"))) {
            this.inventoryscreen.__append(this.noblemasks[3]); 
        }
        if (gcsaver::findmaska(scslosifoundation::stringtoidentifier("msks"), scslosifoundation::stringtoidentifier("ptos"))) {
            this.inventoryscreen.__append(this.greatmasks[2]); 
        }

        //Kopaka
        if (gcsaver::findmaska(scslosifoundation::stringtoidentifier("mtel"), scslosifoundation::stringtoidentifier("tele"))) {
            this.inventoryscreen.__append(this.noblemasks[4]); 
        }
        if (gcsaver::findmaska(scslosifoundation::stringtoidentifier("mskv"), scslosifoundation::stringtoidentifier("visn"))) {
            this.inventoryscreen.__append(this.greatmasks[3]); 
        }

        //Lewa
        if (gcsaver::findmaska(scslosifoundation::stringtoidentifier("mski"), scslosifoundation::stringtoidentifier("cave"))) {
            this.inventoryscreen.__append(this.noblemasks[5]); 
        }
        if (gcsaver::findmaska(scslosifoundation::stringtoidentifier("mask"), scslosifoundation::stringtoidentifier("hive"))) {
            this.inventoryscreen.__append(this.greatmasks[4]); 
        }

        //Tahu
        if (gcsaver::findmaska(scslosifoundation::stringtoidentifier("mk6a"), scslosifoundation::stringtoidentifier("ta03"))) {
            this.inventoryscreen.__append(this.greatmasks[5]); 
        }
        if (gcsaver::findmaska(scslosifoundation::stringtoidentifier("mk5a"), scslosifoundation::stringtoidentifier("ta12"))) {
            this.inventoryscreen.__append(this.greatmasks[6]); 
        }
        return null;
    }

    method setsprite() {
        var noblemasks = 0;
        if (globalclass.player.actorid == "onua") {
            this.ammosprite = "Root/data/art/hud/elemrotate/hpybllonua";
        }
        else if (globalclass.player.actorid == "gali") {
            this.tokens.setcolor(0, 0, 255, 255);
            this.ammosprite = "Root/data/art/hud/elemrotate/hpybllgali";
        }
        else if (globalclass.player.actorid == "poha") {
            this.tokens.setcolor(225, 190, 116, 255);
            this.ammosprite = "Root/data/art/hud/elemrotate/hpybllpohatu";
        }
        else if (globalclass.player.actorid == "kopa") {
            this.ammosprite = "Root/data/art/hud/elemrotate/hpybllkopaka";
        }
        else if (globalclass.player.actorid == "lewa") {
            this.tokens.setcolor(0, 255, 0, 255);
            this.ammosprite = "Root/data/art/hud/elemrotate/hpyblllewa";
        }
        else if (globalclass.player.actorid == "tahu") {
            this.tokens.setcolor(255, 0, 0, 255);
            this.ammosprite = "Root/data/art/hud/elemrotate/hpyblltahu";
        }
        else if (globalclass.player.actorid == "akam") {
            this.tokens.setcolor(255, 200, 0, 255);
            this.ammosprite = "Root/data/art/hud/elemrotate/atom";
        }		
        else if (globalclass.player.actorid == "wair") {
            this.ammosprite = "Root/data/art/hud/elemrotate/atom";
        }		
        else if (globalclass.player.actorid == "nbua") {
            this.tokens.setcolor(122, 0, 122, 255);
            this.ammosprite = "Root/data/art/hud/elemrotate/hpybllonua";
        }
        else if (globalclass.player.actorid == "viki") {
            this.tokens.setcolor(122, 0, 122, 255);
            this.ammosprite = "Root/data/art/hud/elemrotate/hpybllonua";
        }
        else if (globalclass.player.actorid == "when") {
            this.ammosprite = "Root/data/art/hud/elemrotate/hpybllonua";
        }
        return null;
    }
}