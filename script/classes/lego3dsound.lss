class lego3dsound {
    property handle;
    property filename;
    property soundtype;
    property volume;
    property pan;
    property frequency;
    property priority;
    property streamed;
    property characterid;
    property objectid;
    
    method lego3dsound(param1, param2, param3, param4, param5, param6, param7) {
        this.handle = gc3dsound::create();
        this.filename = param1;
        this.soundtype = param2;
        this.volume = param3;
        this.priority = param4;
        this.characterid = param5;
        this.objectid = param6;
        if (this.streamed == null) {
            this.streamed = 0;
        }
        else {
            this.streamed = param7;
        }
        return null;
    }
    
    method initfull() {
        gc3dsound::initthissound(this.handle, this.filename, this.soundtype, this.priority, this.streamed);
        gc3dsound::setvolume(this.handle, this.volume);
        if (!(this.characterid == null)) {
            gc3dsound::synctocharacter(this.handle, this.characterid);
        }
        else if (!(this.objectid == null)) {
            gc3dsound::synctoobject(this.handle, this.objectid);
        }
        return null;
    }
    
    method setpresetenvironmenteax(param1) {
        gc3dsound::setpresetenvironmenteax(param1);
        return null;
    }
    
    method synclistenertocamera() {
        gc3dsound::synclistenertocamera();
        return null;
    }
    
    method synclistenertomaincharacter() {
        gc3dsound::synclistenertomaincharacter();
        return null;
    }
    
    method setlistenerdistancefactor(param1) {
        gc3dsound::setlistenerdistancefactor(param1);
        return null;
    }
    
    method setlistenerdopplerfactor(param1) {
        gc3dsound::setlistenerdopplerfactor(param1);
        return null;
    }
    
    method setlistenerrollofffactor(param1) {
        gc3dsound::setlistenerrollofffactor(param1);
        return null;
    }
    
    method play(param1) {
        gc3dsound::play(this.handle, param1);
        return null;
    }
    
    method stop(param1) {
        gc3dsound::stop(this.handle);
        return null;
    }
    
    method stopreset(param1) {
        gc3dsound::stopreset(this.handle);
        return null;
    }
    
    method setplayoffset(param1) {
        gc3dsound::setplayoffset(this.handle, param1);
        return null;
    }
    
    method setvolume(param1) {
        this.volume = param1;
        gc3dsound::setvolume(this.handle, this.volume);
        return null;
    }
    
    method setpan(param1) {
        this.pan = param1;
        gc3dsound::setpan(this.handle, this.pan);
        return null;
    }
    
    method setfrequency(param1) {
        this.frequency = param1;
        gc3dsound::setfrequency(this.handle, this.frequency);
        return null;
    }
    
    method getfrequency() {
        this.frequency = gc3dsound::getfrequency(this.handle);
        return this.frequency;
    }
    
    method synctoobject(param1, param2, param3, param4) {
        gc3dsound::synctoobject(this.handle, param1, param2, param3, param4);
        return null;
    }
    
    method synctocharacter(param1, param2, param3, param4) {
        gc3dsound::synctocharacter(this.handle, param1, param2, param3, param4);
        return null;
    }
    
    method synctoprojectile(param1) {
        gc3dsound::synctoprojectile(this.handle, param1);
        return null;
    }
    
    method setposition(param1, param2, param3) {
        gc3dsound::setposition(this.handle, param1, param2, param3);
        return null;
    }
    
    method setmindistance(param1) {
        gc3dsound::setmindistance(this.handle, param1);
        return null;
    }
    
    method setmaxdistance(param1) {
        gc3dsound::setmaxdistance(this.handle, param1);
        return null;
    }
    
    method setconeorientation(param1, param2, param3) {
        gc3dsound::setconeorientation(this.handle, param1, param2, param3);
        return null;
    }
    
    method setconeangles(param1, param2) {
        gc3dsound::setconeangles(this.handle, param1, param2);
        return null;
    }
    
    method setconeoutsidevolume(param1) {
        gc3dsound::setconeoutsidevolume(this.handle, param1);
        return null;
    }
}