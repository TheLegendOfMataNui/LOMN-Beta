class hive_puzzle {
    property parent;
    property cinema;
    property mask;
    
    method hive_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        gcmodeldirector::setnearestmax(7);
        gcareadirector::setnearestmax(7);
        gcareadirector::setfog(-10381892, 0 - 5.0, 0 - 600.0, 0.01);
        gclightdirector::setcavelighting(0);
        globalclass.bgmusic.changefilename("Root/Data/sounds/MUSICPart2LegoUNDERGROUND");
        globalclass.bgmusic.play(1);
        if (gcsaver::findcinema(scslosifoundation::stringtoidentifier("cin2")) == 0) {
            this.cinema = gccinemaengine::create();
            gccinemaengine::load(this.cinema, "cin2");
            gccinemaengine::setnextarea(this.cinema, scslosifoundation::stringtoidentifier("shrn"));
        }
        if (gcsaver::findmask(scslosifoundation::stringtoidentifier("mask")) == 0) {
            this.mask = new lego_pickup("mask", 4, 1, "item", 1, 1);
            this.mask.initfull();
            this.mask.show();
        }
        return null;
    }
    
    method cleanupfull() {
        this.cinema = null;
        if (this.mask != null) {
            this.mask.cleanupfull();
            this.mask = null;
        }
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method process(param1) {
        return null;
    }

    method onevent(param1) {
        if (param1.eventid == 39) {
            gccinemaengine::play(this.cinema);
            globalclass.hud.cutscene_warp = 1;
        }
        else if (param1.eventid == 30) {
            this.parent.level.cam.setaimode(9);
        }
        return null;
    }
    
    method input(param1) {
        if (param1.event == 2) {
            if (param1.button == 251) {
                if (this.cinema != null) {
                    gccinemaengine::stop(this.cinema);
                    globalclass.bgmusic.stop();
                }
            }
        }
        return null;
    }
}