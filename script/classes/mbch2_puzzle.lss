class mbch2_puzzle {
    property parent;
    property lizard;
    property mc;
    property boulder;
    property door;
    property randnum;
    property droplandonce;
    property callonce;
    property waterfall;
    property waterfall2;
    property ledge;
    property wirly;
    property discpickup;
    property boulderdropped;
    property cinema;
    property showintro;
    property desctext;
    property howtotext;
    property unasa;
    property unasa_colors;
    property amtapi;
    property amtapi_colors;
    property apefi;
    property apefi_colors;
    property yala;
    property yala_colors;
    property switchai;
        
    method mbch2_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
		var bosstext;

        //Set up area rendering stuff
        gcareadirector::setfog(-402183, 0 - 30.0, 0 - 1200.0, 0.05);
        gclightdirector::setcavelighting(0);
        gcareadirector::setnearestmax(15);
        gcmodeldirector::setnearestmax(7);
        gcmodeldirector::setnearestmaxdist(1000.0);
        gcareadirector::setnearestmaxdist(1000.0);

        //Typical music loading
        globalclass.bgmusic.changefilename("Root/Data/sounds/MUSICLEGODrumAndBassPart1");
        globalclass.bgmusic.play();		

        this.droplandonce = 1;
        this.callonce = 1;
        this.boulderdropped = 0;
        this.randnum = new slosi_random(0);
        this.wirly = new lego_moveableobject("wrpl");
        this.door = new lego_moveableobject("dor1");
        this.boulder = new lego_moveableobject("bldr");
        this.waterfall = new lego_moveableobject("wfl1");
        this.waterfall2 = new lego_moveableobject("wfl2");
        this.ledge = new platform("ldge");
        this.mc = [ new lego_moveableobject("pf01"), 
            new lego_moveableobject("pf02"), 
            new lego_moveableobject("pf03") ];
        this.wirly.initfull();
        this.door.initfull();
        this.door.show();
        this.boulder.initfull();
        this.boulder.setmoveable(10.5, 0.1, 0, 0, 0, 0);
        this.boulder.setfalllimit(335.7);
        this.boulder.show();
        this.waterfall.initfull();
        this.waterfall.setresponse(4, 4, 4);
        this.waterfall.show();
        this.waterfall2.initfull();
        this.waterfall2.setresponse(4, 4, 4);
        this.waterfall2.hide();
        var1 = 0;
        while ((this.mc.__length - 1) >= var1) {
            this.mc[var1].initfull();
            this.mc[var1].setmoveable(1.5, 0.1, 0, 0, 0, 0);
            this.mc[var1].setresponse(0, 0, 3);
            this.mc[var1].show();
            var1 = var1 + 1;
        }
        this.ledge.initfull();
        this.ledge.setupfall(1.0, "wtvr");
        this.ledge.setuptouchshakerotate(1.5, 0.0, 1.5, 0.2);
        this.ledge.show();

        //Lost throwing disc pickup code            
        if (gcsaver::finditem(scslosifoundation::stringtoidentifier("dsc2")) == 0) {
            this.discpickup = new lego_pickup("dsc2", 0, 5, "item", 8, 1);
            this.discpickup.initfull();
            this.discpickup.show();
            this.discpickup.setcondition(32768);
            this.discpickup.setquest(1);
        }
        else {
            this.discpickup = new lego_moveableobject("dsc2");
            this.discpickup.initfull();
            this.discpickup.hide();
        }

        //Set up Tarakava mini-boss
        this.lizard = new gs_lego_character("rptl", "rptl", "fake", 0, -570, 360, 78, "aiin");
        this.lizard.initfull();
        this.lizard.add(0);
        this.lizard.show();
        this.lizard.aisetattacktype(5);
        this.lizard.setscale(2.0);

        //Check if Tarakava intro has been played
        if (bettersaver::getbooleanvalue(80)) {
            this.showintro = 0;
        }
        else {
            this.showintro = 1;
            bosstext = gcareadirector::getscriptstring(scslosifoundation::stringtoidentifier("boss"), 1, 0);
            this.desctext = new gs_legotext("Root/Data/Art/Fonts/BionicleFontHi", bosstext, screenx * 0.5, screeny - 130, 0, 1, 256, 0, 0);
            this.desctext.initfull();
            bosstext = gcareadirector::getscriptstring(scslosifoundation::stringtoidentifier("boss"), 1, 1);
            this.howtotext = new gs_legotext("Root/Data/Art/Fonts/BionicleFont", bosstext, screenx * 0.5, (screeny - 100) + 20, 0, 1, 256, 0, 0);
            this.howtotext.initfull();
        }

        //Check if Tarakava has been defeated or not
        if (bettersaver::getbooleanvalue(81)) {
			globalclass.bgmusic.changefilename("Root/Data/sounds/MUSICGALIambience");
			globalclass.bgmusic.play(1);
			if (this.lizard != null) {
                this.lizard.aisetbenign(1);
            }
        }

        //Set up Unasa (vlgr)
        this.unasa = new gs_lego_character("vlgr", "vlgr", "fake", 0, 273.6912, 350.7369, 60.25493, "aiin");
        this.unasa.initfull();
        this.unasa.add(0);
        this.unasa.show();
        this.unasa.aisetspline("Root/Data/Levels/lev2/mbch/mbch_spline.slb", 0);

        // Set Tohunga: Unasa
        this.unasa_colors = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vlgr"), 0);
        gccharacter::settohunga(this.unasa_colors, rgba(72, 117, 174, 255), rgba(72, 117, 174, 255), scslosifoundation::stringtoidentifier("mkca"));
        
        //Set up Amtapi (vl01)
        this.amtapi = new gs_lego_character("vl01", "vl01", "fake", 0, 283.1583, 350.7395, 74.81258, "aiin");
        this.amtapi.initfull();
        this.amtapi.add(0);
        this.amtapi.show();
        this.amtapi.aisetspline("Root/Data/Levels/lev2/mbch/mbch_spline.slb", 0);

        // Set Tohunga: Amtapi
        this.amtapi_colors = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl01"), 0);
        gccharacter::settohunga(this.amtapi_colors, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), scslosifoundation::stringtoidentifier("mk4a"));
        gccharacter::setcolors(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl01"), 0), rgba(0, 60, 91, 255), rgba(0, 60, 91, 255), rgba(0, 0, 255, 255));

        //Set up Apefi (vl02)
        this.apefi = new gs_lego_character("vl02", "vl02", "fake", 0, 291.3081, 350.7387, 80.64327, "aiin");
        this.apefi.initfull();
        this.apefi.add(0);
        this.apefi.show();
        this.apefi.aisetspline("Root/Data/Levels/lev2/mbch/mbch_spline.slb", 0);

        // Set Tohunga: Apefi
        this.apefi_colors = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl02"), 0);
        gccharacter::settohunga(this.apefi_colors, rgba(0, 60, 91, 255), rgba(0, 0, 255, 255), scslosifoundation::stringtoidentifier("mk0a"));

        //Set up Yala (vl03)
        this.yala = new gs_lego_character("vl03", "vl03", "fake", 0, 300.704, 350.7374, 97.1296, "aiin");
        this.yala.initfull();
        this.yala.add(0);
        this.yala.show();
        this.yala.aisetspline("Root/Data/Levels/lev2/mbch/mbch_spline.slb", 0);

        // Set Tohunga: Yala
        this.yala_colors = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl03"), 0);
        gccharacter::settohunga(this.yala_colors, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), scslosifoundation::stringtoidentifier("mk9a"));
        gccharacter::setcolors(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl03"), 0), rgba(72, 117, 174, 255), rgba(0, 60, 91, 255), rgba(0, 0, 255, 255));

        //Set AI switch flag 
        this.switchai = 1;
        return null;
    }
    
    method cleanupfull() {
        var var1;
        if (this.mc != null) {
            var1 = 0;
            while ((this.mc.__length - 1) >= var1) {
                this.mc[var1].cleanupfull();
                this.mc[var1] = null;
                var1 = var1 + 1;
            }
            this.mc = null;
        }
        if (this.boulder != null) {
            this.boulder.cleanupfull();
            this.boulder = null;
        }
        if (this.door != null) {
            this.door.cleanupfull();
            this.door = null;
        }
        this.randnum = null;
        this.droplandonce = null;
        this.callonce = null;
        if (this.waterfall != null) {
            this.waterfall.cleanupfull();
            this.waterfall = null;
        }
        if (this.waterfall2 != null) {
            this.waterfall2.cleanupfull();
            this.waterfall2 = null;
        }
        if (this.ledge != null) {
            this.ledge.cleanupfull();
            this.ledge = null;
        }
        if (this.wirly != null) {
            this.wirly.cleanupfull();
            this.wirly = null;
        }
        if (this.discpickup != null) {
            this.discpickup.cleanupfull();
            this.discpickup = null;
        }
        if (this.lizard != null) {
            this.lizard.cleanupfull();
            this.lizard = null;
        }
        if (this.desctext != null) {
            this.desctext.cleanupfull();
            this.desctext = null;
        }
        if (this.howtotext != null) {
            this.howtotext.cleanupfull();
            this.howtotext = null;
        }
        if (this.unasa != null) {
            this.unasa.cleanupfull();
            this.unasa = null;
        }
        if (this.amtapi != null) {
            this.amtapi.cleanupfull();
            this.amtapi = null;
        }
        if (this.apefi != null) {
            this.apefi.cleanupfull();
            this.apefi = null;
        }
        if (this.yala != null) {
            this.yala.cleanupfull();
            this.yala = null;
        }
        this.unasa_colors = null;
        this.amtapi_colors = null;
        this.apefi_colors = null;
        this.yala_colors = null;
        return null;
    }
    
    method process(param1) {
        this.unasa.process(param1);
        this.amtapi.process(param1);
        this.apefi.process(param1);
        this.yala.process(param1);
        if (this.ledge == null) {
            debug::print("*****LEDGE IS NOTHING");
        }
        else {
            this.ledge.process(param1);
        }
        if (this.switchai) {
            this.switchai = 0;
            //Disabling AI and splines for Tohunga
            //Unasa (vlgr)
            this.unasa.disableai();
            this.unasa.aidisablepatrolonspline();
            this.unasa.aiidle();
            //Amtapi (vl01)
            this.amtapi.disableai();
            this.amtapi.aidisablepatrolonspline();
            this.amtapi.aiidle();
            //Apefi (vl02)
            this.apefi.disableai();
            this.apefi.aidisablepatrolonspline();
            this.apefi.aiidle();
            //Yala (vl03)
            this.yala.disableai();
            this.yala.aidisablepatrolonspline();
            this.yala.aiidle();
            debug::print("^^^^^^^^^^^^^^^^^^^^^^TOHUNGA SHOULD STAY STILL FOR NOW...AI WAS CHANGED");
        }
        return null;
    }
    
    method onevent(param1) {
        var var1;
        var var2;
        var var3;
        if (this.ledge != null) {
            this.ledge.onevent(param1);
        }
        if (param1.eventid == 35) {
            if (param1.args[0] == this.boulder.id) {
                if (param1.args[1] == 0) {
                    this.boulder.hide();
                }
            }
            else if (param1.args[0] == this.waterfall.id) {
                if (param1.args[1] == 0) {
                    this.waterfall.hide();
                    this.getamoveon();
                }
            }
        }
        else if (param1.eventid == 31) {
            if ((param1.args[0] == this.boulder.id) && (this.boulderdropped == 0)) {
                this.waterfall.fadeout(2.5);
                this.boulder.fadeout(2.0);
                this.waterfall2.show();
                this.waterfall2.fadeout(0.0);
                this.waterfall2.fadein(1.0);
                this.boulderdropped = 1;
            }
        }
        else if (param1.eventid == 1) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) {
                if (param1.args[1] == this.ledge.id) {
                    var1 = this.ledge.obj.getx();
                    var2 = globalclass.player.actor.getpos().y1;
                    var3 = this.ledge.obj.getz();
                    globalclass.player.actor.setpos(var1, var2, var3);
                }
                else if (param1.args[1] == this.boulder.id) {
                    if (globalclass.player.whichmaskonface() == 0) {
                        if (this.callonce) {
                            this.boulder.setmoveableflags(1, 1, 0, 1);
                            this.boulder.setfriction(0.1);
                            this.callonce = 0;
                            globalclass.player.actor.deactivatedragger();
                            if (globalclass.player.actor.isdraggeractive() == 0) {
                                this.cinema = gccinemaengine::create();
                                gccinemaengine::load(this.cinema, "cin4");
                                gccinemaengine::play(this.cinema);
                            }
                        }
                    }
                    else if (this.callonce == 0) {
                        this.boulder.setfriction(0.0);
                        this.boulder.setmoveableflags(0, 0, 0, 0);
                        this.callonce = 1;
                    }
                }
            }
        }
        else if (param1.eventid == 101) {
			globalclass.bgmusic.changefilename("Root/Data/sounds/MUSICGALIambience");
			globalclass.bgmusic.play(1);
            bettersaver::setbooleanvalue(81, 1);
        }        
        else if (param1.eventid == 4) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("land")) {
                this.dropland();
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("intr")) {
                debug::print("****** HIT TP02 SHOWING TARAKAVA INTRO");
                if (this.showintro) {
                    this.playintro();
                }
            }
        }
        else if (param1.eventid == 3) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("wirl")) {
                gcstaticsoundsptrarray::playtablesound(774);
                gcbagroup::setswitchareas(scslosifoundation::stringtoidentifier("mwat"), scslosifoundation::stringtoidentifier("str0"), scslosifoundation::stringtoidentifier("lok0"));
            }
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("tb00"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("tb01"), 0);
            globalclass.player.unkill();
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("g000"));
            this.parent.level.cam.setaimode(11);
            globalclass.player.actor.setinputstate("ninp");
        }
        else if (param1.eventid == 6) {
            this.parent.level.cam.setaimode(11);
            this.parent.level.cam.resetviewport();
            globalclass.hud.show();
            this.desctext.hide();
            this.howtotext.hide();
        }
        return null;
    }
    
    method input(param1) {
        if (param1.event == 2) {
            if (param1.button == 251) {
                if (this.cinema != null) {
                    gccinemaengine::stop(this.cinema);
                }
            }
        }
        if (param1.button == 80) {
            if (param1.event == 2) {
                this.cheat();
            }
        }
        return null;
    }
    
    method cheat() {
        this.boulder.setmoveableflags(1, 1, 0, 1);
        this.boulder.setvelocity(0.05);
        return null;
    }
    
    method dropland() {
        var var1;
        var var2;
        var var3;
        if (this.droplandonce) {
            var1 = 0;
            while ((this.mc.__length - 1) >= var1) {
                var2 = this.randnum.getrandomfloat(0 - 5.0, 5.0);
                var3 = this.randnum.getrandomfloat(0 - 5.0, 5.0);
                this.mc[var1].setmoveableflags(1, 1, 0, 1);
                this.mc[var1].setvelocity(var2, 0.0, var3);
                this.mc[var1].setrollangle(var2, 0.0, var3);
                var1 = var1 + 1;
            }
            this.droplandonce = 0;
        }
        return null;
    }
    
    method opendoor() {
        this.door.interpolate(-1861, 215.1, 0 - 1224.3, 2.5);
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }

    method playintro() {
        this.parent.level.cam.scaletocutscene();
        this.parent.level.cam.makespline("Root/Data/Levels/lev2/mbch/mbch_CAM.slb");
        this.parent.level.cam.setspline(0, 10.0, 1, 0);
        this.parent.level.cam.settargetpos(580.0, 363.0, 58.0);
        this.parent.level.cam.setaimode(2);
        globalclass.hud.hide();
        gcsaver::setcondition(536870912, 1);
        this.desctext.add();
        this.desctext.show();
        this.howtotext.add();
        this.howtotext.show();
        this.showintro = 0;
        bettersaver::setbooleanvalue(80, 1);
        return null;
    }

    method getamoveon() {
        debug::print("is this actually firing like it's supposed to?");
        //Reenable Tohunga AI on splines
        //Unasa (vlgr)
        this.unasa.setsplitanimation(scslosifoundation::stringtoidentifier("d001"));
        this.unasa.aienablepatrolonspline();
        this.unasa.aipatrol();
        //Amtapi (vl01)
        this.amtapi.setsplitanimation(scslosifoundation::stringtoidentifier("d001"));
        this.amtapi.aienablepatrolonspline();
        this.amtapi.aipatrol();
        //Apefi (vl02)
        this.apefi.setsplitanimation(scslosifoundation::stringtoidentifier("d001"));
        this.apefi.aienablepatrolonspline();
        this.apefi.aipatrol();
        //Yala (vl03)
        this.yala.setsplitanimation(scslosifoundation::stringtoidentifier("d001"));
        this.yala.aienablepatrolonspline();
        this.yala.aipatrol();
        debug::print("should be doing the dew");        
    }
}