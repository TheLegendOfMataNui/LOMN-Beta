class snbd_puzzle {
    property parent;
    property wallarray;
    property explotion;
    
    method snbd_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        var var2;
        globalclass.player.processequipment(3);
        gcareadirector::setnearestmax(50);
        globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("k033"), 0);
        globalclass.player.actor.setsurfingability(0.9, 0.8);
        this.wallarray = [ new lego_moveableobject("ic00"), 
            new lego_moveableobject("ic01"), 
            new lego_moveableobject("ic02"), 
            new lego_moveableobject("ic03"), 
            new lego_moveableobject("ic04"), 
            new lego_moveableobject("ic05"), 
            new lego_moveableobject("ic06"), 
            new lego_moveableobject("ic07"), 
            new lego_moveableobject("ic08") ];
        var1 = 0;
        while ((this.wallarray.__length - 1) >= var1) {
            this.wallarray[var1].initfull();
            this.wallarray[var1].setmoveable(1, 1, 0, 0, 0, 0);
            this.wallarray[var1].setresponse(4, 4, 4);
            this.wallarray[var1].setalpha(0.8);
            var1 = var1 + 1;
        }
        this.explotion = new lev4_iceexploder();
        this.explotion.initfull();
        var2 = 1;
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var1 = 0;
        while ((this.wallarray.__length - 1) >= var1) {
            this.wallarray[var1].cleanupfull();
            this.wallarray[var1] = null;
            var1 = var1 + 1;
        }
        this.wallarray = null;
        return null;
    }
    
    method initshort() {
        var var1;
        globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("k033"), 0);
        var1 = 0;
        while ((this.wallarray.__length - 1) >= var1) {
            this.wallarray[var1].show();
            var1 = var1 + 1;
        }
        return null;
    }
    
    method show() {
        return null;
    }
    
    method hide() {
        globalclass.player.actor.setsurfingability(0, 1.0);
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method onevent(param1) {
        var var1;
        if (param1.eventid == 18) {
            var1 = new slosi_string(scslosifoundation::identifiertostring(param1.args[0]));
            var1.truncateleft(2);
            if (var1.string == "ic") {
                this.icewallcollision(param1.args[0], 0);
            }
        }
        else if (param1.eventid == 1) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) {
                var1 = new slosi_string(scslosifoundation::identifiertostring(param1.args[1]));
                var1.truncateleft(2);
                if (var1.string == "ic") {
                    if (globalclass.player.actor.getcurrentanimationid() == scslosifoundation::stringtoidentifier("k036")) {
                        this.icewallcollision(param1.args[1], 0);
                    }
                    else {
                        this.icewallcollision(param1.args[1], 1);
                    }
                }
            }
        }
        else if (param1.eventid == 27) {
            globalclass.player.unkill();
            this.initshort();
            globalclass.player.actor.gotopos(scslosifoundation::stringtoidentifier("str0"), scslosifoundation::stringtoidentifier("lok0"));
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb00"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb01"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb02"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb03"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb04"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb05"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb06"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb07"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb08"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb09"), 0);
        }
        else if (param1.eventid == 7) {
            if (param1.args[2] == scslosifoundation::stringtoidentifier("Ecut")) {
                gcstaticsoundsptrarray::playtablesound(149);
            }
        }
        return null;
    }
    
    method input(param1) {
        return null;
    }
    
    method icewallcollision(param1, param2) {
        var var1;
        var1 = 0;
        while ((this.wallarray.__length - 1) >= var1) {
            if (param1 == this.wallarray[var1].id) {
                this.explode(this.wallarray[var1]);
                if (param2 == 1) {
                    
                }
            }
            var1 = var1 + 1;
        }
        return null;
    }
    
    method explode(param1) {
        this.explotion.explode(param1);
        param1.hide();
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
}