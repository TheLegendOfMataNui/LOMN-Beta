class vllg2_puzzle {
    property parent;
    property oldplatform;
    property newplatform;
    property printwhichplatformimon;
    property puzinc;
    property currentlycollidingwith;
    property tempplatform;
    property canblow;
    property testplatforms;
    property testplatformsubound;
    property door2;
    property puzzlesolved;
    property deadhives;
    property upgradefruit;
    property upgradefruit2;
    property upgradefruit_shown;
    property upgradefruit2_shown;
    property coindoor;
    property coindoortext;
    property coindoortexttimer;
    property showcoindoor;
    property wirlpool;
    property orientation;
    property cinema;
    property cinema_shown;
    
    method vllg2_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        var door_text;
        var tohunga;
        var hive1handle;
        var hive2handle;
        gcmodeldirector::setnearestmax(7);
        gcareadirector::setnearestmax(8);
        gcareadirector::setfog(-9143565, 0 - 1000.0, 0 - 50000.0, 0.01);
        gclightdirector::setcavelighting(0);
        if (gcsaver::findcinema(scslosifoundation::stringtoidentifier("cin3"))) {
            this.cinema_shown = 1;
        }
        else {
            this.cinema_shown = 0;
        }
        if (this.cinema_shown == 0) {
            this.cinema = gccinemaengine::create();
            gccinemaengine::load(this.cinema, "cin3");
            gccinemaengine::setnextarea(this.cinema, scslosifoundation::stringtoidentifier("tura"));
        }
        this.puzzlesolved = 0;
        this.coindoor = new lego_moveableobject("drs0", "vllg");
        this.coindoor.initfull();
        if (bettersaver::getbooleanvalue(53) == 0) {
            this.showcoindoor = 1;
            this.coindoor.show();
            this.coindoor.setalpha(0.5);
        }
        else {
            this.coindoor.hide();
        }
        door_text = gcareadirector::getscriptfluffstringuint(scslosifoundation::stringtoidentifier("door"), 1, 0, 14);
        this.coindoortext = new gs_legotext("Root/Data/Art/Fonts/BionicleFontHi", door_text, screenx * 0.5, screeny * 0.83, 0, 1.5, 256, 4, 0);
        this.coindoortext.initfull();
        this.coindoortext.add();
        this.coindoortexttimer = 0.0;
        this.door2 = new lego_moveableobject("drs1");
        this.door2.initfull();
        gccharactermoveinterpreter::checkanimdone(scslosifoundation::stringtoidentifier("g054"));
        this.testplatforms = [ new lego_moveableobject("pl01"), 
            new lego_moveableobject("pl02"), 
            new lego_moveableobject("pl03"), 
            new lego_moveableobject("pl04") ];
        var1 = 0;
        while ((this.testplatforms.__length - 1) >= var1) {
            this.testplatforms[var1].initfull();
            this.testplatforms[var1].settweakable();
            this.testplatforms[var1].setresponse(0, 0, 0);
            this.testplatforms[var1].movebboxsides(1.7, 1.7, 1.7, 0 - 1.7, 0 - 1.7, 0 - 1.7);
            var1 = var1 + 1;
        }
        this.testplatformsubound = this.testplatforms.__length - 1;
        this.puzinc = 1;
        this.canblow = 0;
        this.tempplatform = this.testplatforms[0];
        this.tempplatform.collide = 0;
        this.deadhives = 0;
        if (gcsaver::isconditionset(1073741824)) {
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vlgr"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 0, 255, 255), rgba(0, 0, 255, 255), scslosifoundation::stringtoidentifier("mkba"));
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("d003"), -1);
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl01"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 150, 121, 255), rgba(72, 117, 174, 255), scslosifoundation::stringtoidentifier("mk0a"));
            gccharacter::setcolors(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl01"), 0), rgba(0, 60, 91, 255), rgba(72, 117, 174, 255), rgba(0, 0, 255, 255));
            gccharacter::setorientation(tohunga, -2);
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("d003"), -1);
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl02"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 0, 255, 255), rgba(0, 0, 255, 255), scslosifoundation::stringtoidentifier("mk7a"));
            gccharacter::setorientation(tohunga, -70);
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("d000"), -1);
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl03"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), scslosifoundation::stringtoidentifier("mk4a"));
            gccharacter::setcolors(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl03"), 0), rgba(0, 208, 33, 255), rgba(0, 208, 33, 255), rgba(102, 0, 102, 255));
            gccharacter::setorientation(tohunga, 10);
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("d000"), -1);
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl04"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), scslosifoundation::stringtoidentifier("mk9a"));
            gccharacter::setcolors(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl04"), 0), rgba(0, 0, 255, 255), rgba(0, 0, 255, 255), rgba(39, 38, 39, 255));
            gccharacter::setorientation(tohunga, 158);
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("d000"), -1);
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl05"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), scslosifoundation::stringtoidentifier("mk2a"));
            gccharacter::setcolors(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl05"), 0), rgba(0, 0, 255, 255), rgba(0, 0, 255, 255), rgba(0, 0, 255, 255));
            gccharacter::setorientation(tohunga, 149);
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("d000"), -1);
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl06"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), scslosifoundation::stringtoidentifier("mkca"));
            gccharacter::setcolors(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl06"), 0), rgba(72, 117, 174, 255), rgba(72, 117, 174, 255), rgba(0, 60, 91, 255));
            gccharacter::setorientation(tohunga, 44);
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("d000"), -1);
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl07"), 0);
            gccharacter::settohunga(tohunga, rgba(72, 117, 174, 255), rgba(72, 117, 174, 255), scslosifoundation::stringtoidentifier("mk8a"));
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl08"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), scslosifoundation::stringtoidentifier("mk2a"));
            gccharacter::setcolors(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl08"), 0), rgba(72, 117, 174, 255), rgba(72, 117, 174, 255), rgba(0, 0, 255, 255));
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl09"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 0, 255, 255), rgba(0, 0, 255, 255), scslosifoundation::stringtoidentifier("mk9a"));
            gccharacter::setorientation(tohunga, 174);
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("hak4"), -1);
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl10"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 60, 91, 255), rgba(0, 0, 255, 255), scslosifoundation::stringtoidentifier("mk1a"));
            gccharacter::setorientation(tohunga, 60);
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("hak4"), -1);
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl11"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), scslosifoundation::stringtoidentifier("mkaa"));
            gccharacter::setcolors(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl11"), 0), rgba(0, 0, 255, 255), rgba(0, 0, 255, 255), rgba(115, 117, 115, 255));
            gccharacter::setorientation(tohunga, 6);
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("hak4"), -1);
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl12"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), scslosifoundation::stringtoidentifier("mk4a"));
            gccharacter::setcolors(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl12"), 0), rgba(72, 117, 174, 255), rgba(0, 60, 91, 255), rgba(0, 0, 255, 255));
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl13"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 60, 91, 255), rgba(0, 60, 91, 255), scslosifoundation::stringtoidentifier("mk6a"));
            gccharacter::setorientation(tohunga, 22);
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("d000"), -1);
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl14"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), scslosifoundation::stringtoidentifier("mk3a"));
            gccharacter::setcolors(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl14"), 0), rgba(0, 60, 91, 255), rgba(0, 60, 91, 255), rgba(0, 60, 91, 255));
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl15"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 60, 91, 255), rgba(0, 0, 255, 255), scslosifoundation::stringtoidentifier("mkaa"));
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl16"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0), scslosifoundation::stringtoidentifier("mk1a"));
            gccharacter::setcolors(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl16"), 0), rgba(0, 60, 91, 255), rgba(0, 60, 91, 255), rgba(0, 60, 91, 255));
            gccharacter::setorientation(tohunga, 174);
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("d000"), -1);
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl17"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 0, 255, 255), rgba(0, 0, 255, 255), scslosifoundation::stringtoidentifier("mk9a"));
            gccharacter::setcolors(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl17"), 0), rgba(72, 117, 174, 255), rgba(72, 117, 174, 255), rgba(0, 0, 255, 255));
            gcareadirector::hide(scslosifoundation::stringtoidentifier("dor2"), scslosifoundation::stringtoidentifier("vllg"));
            gcareadirector::hide(scslosifoundation::stringtoidentifier("ghv0"), scslosifoundation::stringtoidentifier("vllg"));
            gcareadirector::hide(scslosifoundation::stringtoidentifier("ghv1"), scslosifoundation::stringtoidentifier("vllg"));
            globalclass.bgmusic.changefilename("Root/Data/sounds/MusicVillage");
            globalclass.bgmusic.play(1);
        }
        else {
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vlgr"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl01"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl02"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl03"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl04"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl05"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl06"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl07"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl08"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl09"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl10"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl11"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl12"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl13"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl14"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl15"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl16"), 0);
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vl17"), 0);
            hive1handle = gcareadirector::gethive(scslosifoundation::stringtoidentifier("ghv0"));
            gchive::setmaxcreatures(hive1handle, 8);
            gchive::setcreaturetype(hive1handle, scslosifoundation::stringtoidentifier("crb1"));
            gchive::setspawnrate(hive1handle, 5);
            hive2handle = gcareadirector::gethive(scslosifoundation::stringtoidentifier("ghv1"));
            gchive::setmaxcreatures(hive2handle, 8);
            gchive::setcreaturetype(hive2handle, scslosifoundation::stringtoidentifier("crb1"));
            gchive::setspawnrate(hive2handle, 5);
            globalclass.bgmusic.changefilename("Root/Data/sounds/Musicgalitheme");
            globalclass.bgmusic.play();
        }
        this.upgradefruit_shown = gcsaver::finditem(scslosifoundation::stringtoidentifier("frut"));
        if (this.upgradefruit_shown == 0) {
            this.upgradefruit = new vitality_pickup("frut", 17, 2, "frut", 1, 1);
            this.upgradefruit.initfull();
        }
        this.upgradefruit2_shown = gcsaver::finditem(scslosifoundation::stringtoidentifier("fru0"));
        if (this.upgradefruit2_shown == 0) {
            this.upgradefruit2 = new vitality_pickup("fru0", 17, 2, "frut", 1, 1);
            this.upgradefruit2.initfull();
        }
        if (bettersaver::getbooleanvalue(35) == 1) {
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vlgr"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 0, 255, 255), rgba(0, 0, 255, 255), scslosifoundation::stringtoidentifier("mkca"));
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("d000"), -1);
        }
        if (bettersaver::getbooleanvalue(36) == 1) {
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl01"), 0);
            gccharacter::settohunga(tohunga, rgba(0, 150, 121, 255), rgba(72, 117, 174, 255), scslosifoundation::stringtoidentifier("mk0a"));
            gccharacter::setcolors(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vl01"), 0), rgba(0, 0, 40, 255), rgba(150, 174, 255, 255), rgba(0, 0, 255, 255));
            gccharacter::setorientation(tohunga, -2);
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("d000"), -1);
        }
        if (bettersaver::getbooleanvalue(59) == 1) {
            gccollisionphysicsgroup::togglepickuponoff(scslosifoundation::stringtoidentifier("ar00"), 0);
            gcnolightdirector::hide(scslosifoundation::stringtoidentifier("ar00"), gcareadirector::getcurrentarea());
        }
        this.wirlpool = new lego_moveableobject("vtcr");
        this.wirlpool.initfull();
        this.wirlpool.settweakable();
        this.orientation = 1;
        return null;
    }
    
    method cleanupfull() {
        var var1;
        this.oldplatform = null;
        this.newplatform = null;
        this.puzinc = null;
        this.currentlycollidingwith = null;
        this.tempplatform = null;
        if (this.testplatforms != null) {
            var1 = 0;
            while ((this.testplatforms.__length - 1) >= var1) {
                this.testplatforms[var1].cleanupfull();
                this.testplatforms[var1] = null;
                var1 = var1 + 1;
            }
            this.testplatforms = null;
        }
        if (this.upgradefruit != null) {
            this.upgradefruit.cleanupfull();
            this.upgradefruit = null;
        }
        if (this.upgradefruit2 != null) {
            this.upgradefruit2.cleanupfull();
            this.upgradefruit2 = null;
        }
        if (this.coindoortext != null) {
            this.coindoortext.remove();
            this.coindoortext.cleanupfull();
            this.coindoortext = null;
        }
        if (this.coindoor != null) {
            this.coindoor.cleanupfull();
            this.coindoor = null;
        }
        if (this.wirlpool != null) {
            this.wirlpool.cleanupfull();
            this.wirlpool = null;
        }
        this.cinema = null;
        return null;
    }
    
    method process(param1) {
        var var1;
        var var2;
        this.rotatecrystal();
        var1 = 0;
        while (this.testplatformsubound >= var1) {
            this.testplatforms[var1].process();
            var1 = var1 + 1;
        }
        this.tempplatform.process();
        if (this.tempplatform.collide == 0) {
            this.canblow = 0;
        }
        if (this.coindoortexttimer > 0) {
            this.coindoortexttimer = this.coindoortexttimer - param1.deltatime;
        }
        else if (this.coindoortext.onscreen == 1) {
            this.coindoortext.hide();
        }
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 4) {
            if ((param1.args[0] == scslosifoundation::stringtoidentifier("cin3")) && (this.cinema_shown == 0)) {
                if (((gcsaver::isconditionset(1) && gcsaver::isconditionset(2)) && gcsaver::isconditionset(4)) && gcsaver::isconditionset(8)) {
                    gccinemaengine::play(this.cinema);
                    this.cinema_shown = 1;
                    if (globalclass.player.maskcontrol.isactive()) {
                            globalclass.player.maskcontrol.toggleactive();
                            globalclass.hud.mask.hide();
                    }
                }
            }
        }
        else if (param1.eventid == 35) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("drs0")) {
                bettersaver::setbooleanvalue(53, 1);
                this.coindoor.hide();
            }
        }
        else if (param1.eventid == 51) {
            if (param1.args[1] == 1) {
                this.deadhives = this.deadhives + 1;
                if (this.deadhives >= 2) {
                    gcsaver::setcondition(1073741824, 1);
                    gcareadirector::hide(scslosifoundation::stringtoidentifier("dor2"), scslosifoundation::stringtoidentifier("vllg"));
                    globalclass.bgmusic.changefilename("Root/Data/sounds/MusicVillage");
                    globalclass.bgmusic.play(1);
                }
            }
        }
        else if (param1.eventid == 1) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) {
                if (param1.args[1] != scslosifoundation::stringtoidentifier("cnt1")) {
                    this.newplatform = param1.args[1];
                    if (this.oldplatform != this.newplatform) {
                        this.printwhichplatformimon = 1;
                    }
                    if (this.printwhichplatformimon) {
                        debug::print("You're on platform " + scslosifoundation::identifiertostring(param1.args[1]));
                        this.oldplatform = param1.args[1];
                        this.printwhichplatformimon = 0;
                    }
                }
            }
            if (param1.args[2] == 0) {
                if (param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) {
                    if (param1.args[1] == this.testplatforms[0].id) {
                        this.currentlycollidingwith = this.testplatforms[0].id;
                        this.tempplatform = this.testplatforms[0];
                        this.canblow = 1;
                        this.tempplatform.setcollide();
                    }
                    else if (param1.args[1] == this.testplatforms[1].id) {
                        this.currentlycollidingwith = this.testplatforms[1].id;
                        this.tempplatform = this.testplatforms[1];
                        this.canblow = 1;
                        this.tempplatform.setcollide();
                    }
                    else if (param1.args[1] == this.testplatforms[2].id) {
                        this.currentlycollidingwith = this.testplatforms[2].id;
                        this.tempplatform = this.testplatforms[2];
                        this.canblow = 1;
                        this.tempplatform.setcollide();
                    }
                    else if (param1.args[1] == this.testplatforms[3].id) {
                        this.currentlycollidingwith = this.testplatforms[3].id;
                        this.tempplatform = this.testplatforms[3];
                        this.canblow = 1;
                        this.tempplatform.setcollide();
                    }
                }
            }
            if (param1.args[1] == scslosifoundation::stringtoidentifier("drs0")) {
                if (this.showcoindoor == 1) {
                    if ((globalclass.player.tokens >= 14) && (globalclass.player.maskcontrol.isselectable(9)) && (globalclass.player.actor.ishookenabled)) {
                        this.coindoor.fadeout(1.5);
                        gcstaticsoundsptrarray::playtablesound(1084);
                        this.showcoindoor = 0;
                        this.coindoortext.hide();
                    }
                    else {
                        this.coindoortext.show();
                        this.coindoortexttimer = 1.0;
                    }
                }
            }
        }
        else if (param1.eventid == 11) {
            if (scslosifoundation::identifiertostring(param1.args[1]) == "g054") {
                debug::print("***** GETTING THE ANIM_FINISHED EVENT FOR go54");
                globalclass.player.actor.setinputstate("ninp");
                globalclass.level.cam.setaimode(11);
                if (this.puzzlesolved) {
                    this.opendoortoevac();
                    this.puzzlesolved = 0;
                }
            }
        }
        else if (param1.eventid == 46) {
            gccollisionphysicsgroup::spinmask(1.2);
        }
        else if (param1.eventid == 27) {
            globalclass.player.unkill();
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("g000"));
            this.parent.level.cam.setaimode(11);
        }
        else if (param1.eventid == 12) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("drs1")) {
                globalclass.player.actor.setinputstate("ninp");
                globalclass.level.cam.setaimode(11);
            }
        }
        else if (param1.eventid == 41) {
            if (bettersaver::getbooleanvalue(35)) {
                this.give_fruit();
            }
            if (bettersaver::getbooleanvalue(36)) {
                this.give_fruit2();
            }
        }
        else if (param1.eventid == 3) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tb00")) {
                if (param1.args[1] == 1) {
                    globalclass.player.canshootdragger(0);
                }
                else if (param1.args[1] == 0) {
                    globalclass.player.canshootdragger(1);
                }
            }
        }
        return null;
    }
    
    method input(param1) {
        if (param1.button == 90) {
            if (param1.event == 2) {
                this.cheat(1);
            }
        }
        if (param1.button == 231) {
            if (param1.event == 2) {
                this.blowtheconch();
            }
        }
        if (param1.button == 88) {
            if (param1.event == 2) {
                this.cheat(2);
            }
        }
        if (param1.button == 67) {
            if (param1.event == 2) {
                this.cheat(3);
            }
        }
        if ((param1.event == 2) && (param1.button == 251)) {
            if (this.cinema != null) {
                gccinemaengine::stop(this.cinema);
            }
        }
        return null;
    }
    
    method cheat(param1) {
        if (param1 == 1) {
            globalclass.player.addtoken(1);
        }
        else if (param1 == 2) {
            globalclass.player.actor.setpos(0 - 0.4, 52.8, 0 - 52.0);
        }
        else if (param1 == 3) {
            this.opendoortoevac();
        }
        return null;
    }
    
    method blowtheconch() {
        var var1;
        var var2;
        var var3;
        if (this.canblow) {
            if ((globalclass.player.actor.getorientation() > -45) && (globalclass.player.actor.getorientation() < 45)) {
                globalclass.player.actor.setorientation(-1);
                if (this.currentlycollidingwith == this.testplatforms[0].id) {
                    debug::print("******* BLOWING CONCH 1");
                    var1 = this.testplatforms[0].getx();
                    var2 = this.testplatforms[0].gety();
                    var3 = this.testplatforms[0].getz();
                    gcstaticsoundsptrarray::playtablesound(1044);
                    globalclass.player.actor.setpos(var1, var2, var3);
                    globalclass.player.actor.setinputstate("none");
                    globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("g054"));
                    if (this.puzinc < 8) {
                        if ((this.puzinc == 1) || (this.puzinc == 6)) {
                            this.puzinc = this.puzinc + 1;
                        }
                        else {
                            this.puzinc = 1;
                        }
                    }
                }
                else if (this.currentlycollidingwith == this.testplatforms[1].id) {
                    debug::print("******* BLOWING CONCH 2");
                    var1 = this.testplatforms[1].getx();
                    var2 = this.testplatforms[1].gety();
                    var3 = this.testplatforms[1].getz();
                    gcstaticsoundsptrarray::playtablesound(1045);
                    globalclass.player.actor.setpos(var1, var2, var3);
                    globalclass.player.actor.setinputstate("none");
                    globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("g054"));
                    if (this.puzinc < 8) {
                        if (this.puzinc == 4) {
                            this.puzinc = this.puzinc + 1;
                        }
                        else {
                            this.puzinc = 1;
                        }
                    }
                }
                else if (this.currentlycollidingwith == this.testplatforms[2].id) {
                    debug::print("******* BLOWING CONCH 3");
                    var1 = this.testplatforms[2].getx();
                    var2 = this.testplatforms[2].gety();
                    var3 = this.testplatforms[2].getz();
                    gcstaticsoundsptrarray::playtablesound(1046);
                    globalclass.player.actor.setpos(var1, var2, var3);
                    globalclass.player.actor.setinputstate("none");
                    globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("g054"));
                    if (this.puzinc < 8) {
                        if ((this.puzinc == 2) || (this.puzinc == 7)) {
                            if (this.puzinc == 7) {
                                debug::print("************** CONGRATS PUZZLE SOLVED");
                                this.puzzlesolved = 1;
                            }
                            this.puzinc = this.puzinc + 1;
                        }
                        else {
                            this.puzinc = 1;
                        }
                    }
                }
                else if (this.currentlycollidingwith == this.testplatforms[3].id) {
                    debug::print("******* BLOWING CONCH 4");
                    var1 = this.testplatforms[3].getx();
                    var2 = this.testplatforms[3].gety();
                    var3 = this.testplatforms[3].getz();
                    gcstaticsoundsptrarray::playtablesound(1047);
                    globalclass.player.actor.setpos(var1, var2, var3);
                    globalclass.player.actor.setinputstate("none");
                    globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("g054"));
                    if (this.puzinc < 8) {
                        if ((this.puzinc == 3) || (this.puzinc == 5)) {
                            this.puzinc = this.puzinc + 1;
                        }
                        else {
                            this.puzinc = 1;
                        }
                    }
                }
            }
            else {
                debug::print("you are not within the orientation range limit....");
            }
        }
        return null;
    }
    
    method opendoortoevac() {
        var var1;
        var var2;
        var var3;
        var1 = this.door2.getx();
        var2 = this.door2.gety();
        var3 = this.door2.getz();
        globalclass.level.cam.setaimode(0);
        globalclass.level.cam.setpos(0 - 3.6, 61.0, 0 - 110.6);
        globalclass.level.cam.settargetpos(var1, var2, var3);
        globalclass.level.cam.shakecamera(2.45, 0.5);
        globalclass.player.actor.setinputstate("none");
        this.door2.interpolate(var1, var2 + 9.5, var3, 2.5);
        return null;
    }
    
    method give_fruit() {
        if (this.upgradefruit_shown == 0) {
            this.upgradefruit.obj.setpos(70.00262, -0.956037, 70.24104);
            this.upgradefruit_shown = 1;
        }
        return null;
    }
    
    method give_fruit2() {
        if (this.upgradefruit2_shown == 0) {
            this.upgradefruit2.obj.setpos(461.1303, 0.496229, 473.2127);
            this.upgradefruit2_shown = 1;
        }
        return null;
    }
    
    method rotatecrystal() {
        if (this.orientation > 359) {
            this.orientation = 0;
        }
        else {
            this.orientation = this.orientation + 1;
        }
        this.wirlpool.setorientation(0.0, this.orientation, 0.0);
        return null;
    }
}