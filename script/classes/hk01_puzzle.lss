class hk01_puzzle {
    property parent;
    property exitdoor;
    property glyph;
    property ledgearray;
    property targetarray;
    
    method hk01_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        gcareadirector::setfog(-15724528, 0 - 1.0, 0 - 200.0, 0.05);
        gclightdirector::setcavelighting(1);
        gcareadirector::setnearestmax(15);
        gcmodeldirector::setnearestmax(8);
        globalclass.bgmusic.changefilename("Root/Data/sounds/MUSICLEGOUNDERGROUND");
        globalclass.bgmusic.play(1);
        this.exitdoor = new lego_moveableobject("dr02", this.parent.name);
        this.exitdoor.initfull();
        this.ledgearray = [ new lego_volatileplatform("hld0", this.parent.name),
            new lego_volatileplatform("hld1", this.parent.name),
            new lego_volatileplatform("hld2", this.parent.name),
            new lego_volatileplatform("hld3", this.parent.name),
            new lego_volatileplatform("hld4", this.parent.name),
            new lego_volatileplatform("hld5", this.parent.name) ];
        this.targetarray = [ new lego_moveableobject("hot0", this.parent.name),
            new lego_moveableobject("hot3", this.parent.name),
            new lego_moveableobject("hot4", this.parent.name),
            new lego_moveableobject("hot6", this.parent.name),
            new lego_moveableobject("hot7", this.parent.name),
            new lego_moveableobject("hot8", this.parent.name) ];
        if (gcsaver::findglyph(scslosifoundation::stringtoidentifier("glyl")) == 0) {
            this.glyph = new lego_pickup("glyl", 4, 2, "item", 6, 1);
            this.glyph.initfull();
            this.glyph.show();
        }
        else {
            this.exitdoor.interpolate(this.exitdoor.getx(), this.exitdoor.gety() + 10, this.exitdoor.getz(), 0);
        }
        var1 = 0;
        while ((this.ledgearray.__length - 1) >= var1) {
            this.ledgearray[var1].initfull();
            this.ledgearray[var1].settimetofall(15.0);
            this.ledgearray[var1].show();
            var1 = var1 + 1;
        }
        var1 = 0;
        while ((this.targetarray.__length - 1) >= var1) {
            this.targetarray[var1].initfull();
            this.targetarray[var1].setresponse(1, 1, 1);
            this.targetarray[var1].setmytargetingflags(1);
            var1 = var1 + 1;
        }
        return null;
    }
    
    method cleanupfull() {
        var var1;
        if (this.exitdoor != null) {
            this.exitdoor.cleanupfull();
            this.exitdoor = null;
        }
        if (this.glyph != null) {
            this.glyph.cleanupfull();
            this.glyph = null;
        }
        if (this.ledgearray != null) {
            var1 = 0;
            while ((this.ledgearray.__length - 1) >= var1) {
                this.ledgearray[var1].cleanupfull();
                this.ledgearray[var1] = null;
                var1 = var1 + 1;
            }
            this.ledgearray = null;
        }
        if (this.targetarray != null) {
            var1 = 0;
            while ((this.targetarray.__length - 1) >= var1) {
                this.targetarray[var1].cleanupfull();
                this.targetarray[var1] = null;
                var1 = var1 + 1;
            }
            this.targetarray = null;
        }
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method input(param1) {
        return null;
    }
    
    method onevent(param1) {
        var var1;
        var var2;
        if (this.ledgearray != null) {
            var1 = 0;
            while ((this.ledgearray.__length - 1) >= var1) {
                this.ledgearray[var1].onevent(param1);
                var1 = var1 + 1;
            }
        }
        if (param1.eventid == 39) {
            this.exitdoor.interpolate(this.exitdoor.getx(), this.exitdoor.gety() + 10, this.exitdoor.getz(), 7);
        }
        else if (param1.eventid == 4) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cp00")) {
                globalclass.player.usecheckpoints = 1;
            }
        }
        else if (param1.eventid == 27) {
            if (globalclass.player.usecheckpoints == 1) {
                if (this.parent.enterlookid == scslosifoundation::stringtoidentifier("lok0")) {
                    var2 = scslosifoundation::stringtoidentifier("lok1");
                }
                else {
                    var2 = scslosifoundation::stringtoidentifier("lok0");
                }
                globalclass.player.actor.gotopos(scslosifoundation::stringtoidentifier("str2"), var2);
            }
            var1 = 0;
            while ((this.ledgearray.__length - 1) >= var1) {
                this.ledgearray[var1].reset();
                var1 = var1 + 1;
            }
        }
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
}