class hk01_puzzle {
    property parent;
    property hookarray;
    
    method hk01_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        var kapura;
        var hive1handle;
        var hive2handle;
        globalclass.bgmusic.changefilename("Root/Data/sounds/MusicGaliAmbience");
        globalclass.bgmusic.play();
        this.hookarray = [ new lego_moveableobject("hk09"), 
            new lego_moveableobject("hk10"), 
            new lego_moveableobject("hk12"), 
            new lego_moveableobject("hk14"), 
            new lego_moveableobject("hk16"), 
            new lego_moveableobject("hk17") ];
        var1 = 0;
        while ((this.hookarray.__length - 1) >= var1) {
            this.hookarray[var1].initfull();
            this.hookarray[var1].setmytargetingflags(1);
            this.hookarray[var1].setresponse(1, 1, 1);
            var1 = var1 + 1;
        }
        globalclass.player.setgrapplinghookdistance(48);
        hive1handle = gcareadirector::gethive(scslosifoundation::stringtoidentifier("ghv0"));
        gchive::setmaxcreatures(hive1handle, 8);
        gchive::setcreaturetype(hive1handle, scslosifoundation::stringtoidentifier("crb1"));
        gchive::setspawnrate(hive1handle, 5);
        hive2handle = gcareadirector::gethive(scslosifoundation::stringtoidentifier("ghv1"));
        gchive::setmaxcreatures(hive2handle, 8);
        gchive::setcreaturetype(hive2handle, scslosifoundation::stringtoidentifier("crb1"));
        gchive::setspawnrate(hive2handle, 5);
        kapura = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vlgr"), 0);
        gccharacter::setkapura(kapura);
        globalclass.player.actor.setclimbability(5);
        return null;
    }
    
    method cleanupfull() {
        var var1;
        if (this.hookarray != null) {
            var1 = 0;
            while ((this.hookarray.__length - 1) >= var1) {
                this.hookarray[var1].cleanupfull();
                this.hookarray[var1] = null;
                var1 = var1 + 1;
            }
            this.hookarray = null;
        }
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 46) {
            debug::print("************* GETTING THE PLAYER IS DEAD EVENT ----- SPIN MASK HAPPENING");
            gccollisionphysicsgroup::spinmask(1.2);
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            this.parent.level.cam.setaimode(11);
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("g000"));
        }
        return null;
    }
    
    method input(param1) {
        if (param1.button == 90) {
            if (param1.event == 2) {
                this.cheat();
            }
        }
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method cheat() {
        debug::print("***** GRAPPLING HOOK IS SET TO 48");
        globalclass.player.setgrapplinghookdistance(48);
        return null;
    }
}