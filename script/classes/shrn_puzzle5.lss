class shrn_puzzle5 {
    property parent;
    property cinema;
    property bossdoor;
    property callev_safe_time_event_once;
    property portalactive;
    property doorx;
    property doorz;
    property testbossdoorproximity;
    
    method shrn_puzzle5(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var matau;
        var var2;
        var var3;
        var var4;
        this.testbossdoorproximity = 0;
        this.callev_safe_time_event_once = 1;
        globalclass.bgmusic.changefilename("Root/Data/sounds/MusicShrine");
        globalclass.bgmusic.play();
        this.bossdoor = new lego_moveableobject("dor1");
        this.bossdoor.initfull();
        this.bossdoor.setalpha(0.2);
        this.doorx = this.bossdoor.getx();
        this.doorz = this.bossdoor.getz();
        if (gcsaver::findcinema(scslosifoundation::stringtoidentifier("cin2"))) {
            if (gcsaver::findcinema(scslosifoundation::stringtoidentifier("cin3")) == 0) {
                globalclass.player.actor.deactivatedragger();
                if (globalclass.player.actor.isdraggeractive() == 0) {
                    this.cinema = gccinemaengine::create();
                    gccinemaengine::load(this.cinema, "cin3");
                    gccinemaengine::startatframe(this.cinema, 544);
                    gccinemaengine::play(this.cinema);
                }
            }
        }
        matau = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("mata"), 0);
        gccharacter::setinputstate(matau, scslosifoundation::stringtoidentifier("none"));
        gccharacter::switchanimation(matau, scslosifoundation::stringtoidentifier("ma00"), -1);
        var4 = scslosifoundation::stringtoidentifier("tps9");
        this.portalactive = gcsaver::portalactive();
        if (this.portalactive == 1) {
            gccollisionphysicsgroup::setportal(var4, "root/data/art/portals/lewa/village_ripple/l_prtl", 1);
        }
        else {
            gccollisionphysicsgroup::turnoffnextarea(var4);
        }
        return null;
    }
    
    method cleanupfull() {
        if (this.bossdoor != null) {
            this.bossdoor.cleanupfull();
            this.bossdoor = null;
        }
        this.cinema = null;
        this.doorx = null;
        this.doorz = null;
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method process(param1) {
        var var1;
        var var2;
        if (this.testbossdoorproximity) {
            var1 = globalclass.player.actor.getposx();
            var2 = globalclass.player.actor.getposz();
            if (var1 >= (this.doorx - 10)) {
                if (var1 <= (this.doorx + 10)) {
                    if (var2 >= (this.doorz - 10)) {
                        if (var2 <= (this.doorz + 10)) {
                            this.testbossdoorproximity = 0;
                            this.openbossdoor();
                        }
                    }
                }
            }
        }
        return null;
    }
    
    method onevent(param1) {
        var var1;
        if (param1.eventid == 35) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("dor1")) {
                if (param1.args[1] == 0) {
                    this.bossdoor.hide();
                }
            }
        }
        else if (param1.eventid == 41) {
            if (this.portalactive == 0) {
                var1 = scslosifoundation::stringtoidentifier("tps9");
                gccollisionphysicsgroup::turnonnextarea(var1, scslosifoundation::stringtoidentifier("tura"));
                gccollisionphysicsgroup::setportal(var1, "root/data/art/portals/lewa/village_ripple/l_prtl", 1);
                this.portalactive = 1;
            }
        }
        else if (param1.eventid == 44) {
            if (this.callev_safe_time_event_once) {
                if (globalclass.player.getamounttokens() >= 10) {
                    debug::print("*** YOU HAVE ENOUGH COINS");
                    if (globalclass.player.haselement()) {
                        debug::print("**** PLAYER HAS THE ELEMENTAL POWER");
                        if (globalclass.player.maskcontrol.isselectable(12)) {
                            debug::print("**** PLAYER HAS THE MASK OF ILLUSION");
                            if (globalclass.player.maskcontrol.isselectable(4)) {
                                debug::print("**** PLAYER HAS THE MASK OF LEVITATION");
                                if (globalclass.player.actor.ishookenabled) {
                                    debug::print("**** PLAYER HAS THE HOOK");
                                    this.testbossdoorproximity = 1;
                                    this.callev_safe_time_event_once = 0;
                                }
                            }
                        }
                    }
                }
            }
        }
        else if (param1.eventid == 3) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tb01")) {
                globalclass.player.kill();
            }
        }
        else if (param1.eventid == 30) {
            globalclass.player.maskcontrol.changemask(10);
            globalclass.bgmusic.changefilename("Root/Data/sounds/MusicShrine");
            globalclass.bgmusic.play(1);
        }
        else if (param1.eventid == 27) {
            globalclass.level.cam.setaimode(11);
            globalclass.player.unkill();
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("tb01"), 0);
        }
        return null;
    }
    
    method input(param1) {
        if ((param1.event == 2) && (param1.button == 251)) {
            if (this.cinema != null) {
                gccinemaengine::stop(this.cinema);
            }
        }
        return null;
    }
    
    method openbossdoor() {
        this.bossdoor.fadeout(2.0);
        return null;
    }
}