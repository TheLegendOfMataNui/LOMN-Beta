class gali7_puzzle {
    property parent;
    property targetarray;
    
    method gali7_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        gcmodeldirector::setnearestmax(10);
        if (globalclass.player.actorid != "gali") {
            globalclass.player.changetoa("gali");
            globalclass.player.maskcontrol.changemask(1);
            globalclass.player.setupgrapplinghook();
            globalclass.player.setgrapplinghookdistance(85);
        }
        globalclass.hud.cdtimer.initfull();
        globalclass.hud.cdtimer.settime(120.0);
        globalclass.hud.cdtimer.start();
        this.targetarray = [ new lego_moveableobject("tg01", this.parent.name), 
            new lego_moveableobject("tg02", this.parent.name), 
            new lego_moveableobject("tg03", this.parent.name) ];
        var1 = 0;
        while ((this.targetarray.__length - 1) >= var1) {
            this.targetarray[var1].initfull();
            this.targetarray[var1].setmytargetingflags(1);
            this.targetarray[var1].setresponse(1, 1, 1);
            var1 = var1 + 1;
        }
        return null;
    }
    
    method cleanupfull() {
        var var1;
        if (this.targetarray != null) {
            var1 = 0;
            while ((this.targetarray.__length - 1) >= var1) {
                this.targetarray[var1].cleanupfull();
                this.targetarray[var1] = null;
                var1 = var1 + 1;
            }
            this.targetarray = null;
        }
        globalclass.hud.cdtimer.cleanupfull();
        return null;
    }

    method process(param1) {
        if (globalclass.hud.cdtimer.finished()) {
            gccollisionphysicsgroup::settoaposition(scslosifoundation::stringtoidentifier("str0"), scslosifoundation::stringtoidentifier("lok0"));
            globalclass.hud.cdtimer.reset();
            globalclass.player.actor.deactivatedragger();
        }
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("g000"));
            globalclass.hud.cdtimer.reset();
        }
        else if (param1.eventid == 46) {
            gccollisionphysicsgroup::spinmask(1.2);
        }
        return null;
    }
    
    method input(param1) {
        return null;
    }
    
    method exit() {
       this.parent = null;
       return null;
    }
}