class enemy {
    property instarray;

    method enemy() {
	    return null;
    }

    method initfull() {
        this.instarray = [  ];
        return null;
    }

    method cleanupfull() {
        if (this.instarray != null) {
            this.instarray = null;
        }
        return null;
    }

    method process(param1) {
        return null;
    }

    method input(param1) {
        return null;
    }

    method onevent(param1) {
        var instance = 0;
        //Character Array Reset
        //EventID 20 = Clear Area Event
        //Clears the array on exiting the area
        if (param1.eventid == 20) {
            this.instarray = [  ];
            debug::print("CLEARED ENEMY ARRAY");
        }

        //Character Hazard Check
        //EventID 44 = Collision Physics Process Event
        //Currently only kills anything below Y -100
        else if (param1.eventid == 44) {
            if (this.instarray != null) {
                while ((this.instarray.__length - 1) >= instance) {
                    if (gccharacter::getpositiony(this.instarray[instance]) != null) {
                        if (gccharacter::getpositiony(this.instarray[instance]) < -100) {                        
                            gccharacter::aipatrol(this.instarray[instance]);
                            gccharacter::setfalllimit(this.instarray[instance], -100);
                            debug::print("RAHI IS OUT OF BOUNDS, RESETTING AI...");
                        }
                        instance = instance + 1;
                    }
                }
            }
        }

        //Character Spawned Check
        //EventID 100 = GcModelDirector::AddCharacter. Passes CharID, ([1]) InstanceID, ([2]) and AreaID. ([3])       
        else if (param1.eventid == 100) {             
            this.instarray.__append(gcmodeldirector::getcharacter(param1.args[2]));
            debug::print("Spawned " + (scslosifoundation::identifiertostring(param1.args[2])));
        }

        //Character Cured Check
        //EventID 101 = GcCharacter::Kill. Passes CharID, ([1]) InstanceID, ([2]) and AreaID. ([3])
        //GcCharacter::Kill as called by LOMNHook currently redirects to GcCharacter::AiSetBenign
        else if (param1.eventid == 101) {                   
            gccharacter::aiidle(gcmodeldirector::getcharacter(param1.args[2]));
            debug::print((scslosifoundation::identifiertostring(param1.args[2])) + " IS NOW IDLE");
        }
        return null;
    }
}