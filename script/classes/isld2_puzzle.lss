class isld2_puzzle {
    property parent;
    property glasswallarray;
    property entered_underwater;
    property call_ev_safe_time_once;
    property gearpickup;
    property displaytexttimer;
    property desctext;
    property howtotext;
    
    method isld2_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        var gearpickup_text;
        this.glasswallarray = [ new lego_triggerobject("tp02", this.parent.name),
            new lego_triggerobject("tp03", this.parent.name),
            new lego_triggerobject("tp04", this.parent.name),
            new lego_triggerobject("tp05", this.parent.name),
            new lego_triggerobject("tp06", this.parent.name) ];
        var1 = 0;
        while ((this.glasswallarray.__length - 1) >= var1) {
            this.glasswallarray[var1].initfull();
            this.glasswallarray[var1].setresponse(3, 3);
            var1 = var1 + 1;
        }
        this.call_ev_safe_time_once = 1;
        this.entered_underwater = 1;
        if (gcsaver::finditem(scslosifoundation::stringtoidentifier("gear")) == 0) {
            this.gearpickup = new lego_pickup("gear", 0, 5, "item", 6, 1);
            this.gearpickup.initfull();
            this.gearpickup.show();
            this.gearpickup.setcondition(131072);
            this.gearpickup.setquest(2);
        }
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 46) {
            gccollisionphysicsgroup::spinmask(1.2);
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            globalclass.player.actor.setinputstate("ninp");
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("g000"));
            this.parent.level.cam.setaimode(11);
            if (this.entered_underwater == 0) {
                globalclass.player.actor.setunderwater(0);
                debug::print("******************************** OUT OF WATER");
            }
            else {
                debug::print("******************************** IN WATER");
                globalclass.player.actor.setwaterlevel(1000);
            }
        }
        else if (param1.eventid == 44) {
            if (this.call_ev_safe_time_once) {
                if (this.parent.enterstartid == scslosifoundation::stringtoidentifier("str0")) {
                    this.entered_underwater = 0;
                    debug::print("*******************************1 OUT OF WATER");
                    globalclass.player.actor.setunderwater(0);
                }
                else {
                    this.entered_underwater = 1;
                    debug::print("*******************************1 IN WATER");
                    globalclass.player.actor.setwaterlevel(1000);
                }
                this.call_ev_safe_time_once = 0;
            }
        }
        return null;
    }
    
    method cleanupfull() {
        var var1;
        if (this.glasswallarray != null) {
            var1 = 0;
            while ((this.glasswallarray.__length - 1) >= var1) {
                this.glasswallarray[var1].cleanupfull();
                this.glasswallarray[var1] = null;
                var1 = var1 + 1;
            }
            this.glasswallarray = null;
        }
        if (this.gearpickup != null) {
            this.gearpickup.cleanupfull();
            this.gearpickup = null;
        }
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
}