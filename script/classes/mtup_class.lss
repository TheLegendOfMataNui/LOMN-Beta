class mtup_class {
    property parent;
    property cinema;
    property door;
    
    method mtup_class(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        gcareadirector::setnearestmax(50);
        gcmodeldirector::setnearestmax(10);
        gcareadirector::setfog(-1, 0 - 20.0, 0 - 600.0, 0.05);
        gclightdirector::setcavelighting(0);
        var1 = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vlgr"), 0);
        gccharacter::settohunga(var1, rgba(163, 81, 0, 255), rgba(163, 81, 0, 255), scslosifoundation::stringtoidentifier("mk2a"));
        gccharacter::setinputstate(var1, scslosifoundation::stringtoidentifier("none"));
        gccharacter::setupmoveable(var1, 1.5, 0.8, 1, 0, 0);
        gccharacter::setsplitanimation(var1, scslosifoundation::stringtoidentifier("d000"), -1);
        gccharacter::setorientation(var1, -300);
        if (gcsaver::findcinema(scslosifoundation::stringtoidentifier("cin1")) == 0) {
            this.cinema = gccinemaengine::create();
            gccinemaengine::load(this.cinema, "cin1");
            gccinemaengine::play(this.cinema);
        }
        this.door = new lego_moveableobject("door");
        this.door.initfull();
        this.door.setresponse(3, 3, 3);
        this.door.settweakable();
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method input(param1) {
        if (param1.event == 2) {
            if (param1.button == 251) {
                if (this.cinema != null) {
                    gccinemaengine::stop(this.cinema);
                }
            }
            else if (param1.button == 86) {
                this.door.interpolate(this.door.getx(), this.door.gety() + 10, this.door.getz(), 2);
            }
        }
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 30) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cin1")) {
                globalclass.bgmusic.changefilename("Root/Data/sounds/MusicPohatuAmbience");
                globalclass.bgmusic.play(1);
                globalclass.player.maskcontrol.changemask(1);
            }
        }
        else if (param1.eventid == 51) {
            if (param1.args[1] == 1) {
                this.door.interpolate(this.door.getx(), 4.0244, this.door.getz(), 5);
            }
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("p000"));
        }
        return null;
    }
    
    method cleanupfull() {
        this.cinema = null;
        if (this.door != null) {
            this.door.cleanupfull();
            this.door = null;
        }
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
}