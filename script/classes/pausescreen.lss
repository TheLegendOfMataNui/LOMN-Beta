class pausescreen {
    property menustrings;
    property menubox;
    property activeidx;
    property inputidx;
    property ispaused;
    property hidden;
    property inputenabled;
    
    method pausescreen() {
        return null;
    }
    
    method initfull() {
        this.menustrings = null;
        this.activeidx = 0;
        this.inputidx = null;
        this.ispaused = 0;
        this.hidden = 0;
        this.inputenabled = 1;
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var var2;
        if (!(this.menustrings == null)) {
            var1 = this.menustrings.__length - 1;
            var2 = 0;
            while (var1 >= var2) {
                this.menustrings[var1 - var2].cleanupfull();
                this.menustrings[var1 - var2] = null;
                var2 = var2 + 1;
            }
            this.menustrings = null;
            this.menubox = null;
        }
        return null;
    }
    
    method toggleinput(param1) {
        if (!(param1 == null)) {
            this.inputenabled = param1;
        }
        else if (this.inputenabled == 1) {
            this.inputenabled = 0;
        }
        else {
            this.inputenabled = 1;
        }
        return null;
    }
    
    method pause() {
        var var1;
        var width = gcgame::getresolutionwidth();
        if (gcgame::pausegame() == 1) {
            this.menustrings = [ 
                new gs_legotext("Root/Data/Art/Fonts/BionicleFontshad", gcareadirector::getscriptfluffstring(scslosifoundation::stringtoidentifier("fend"), 1, 59), screenx * 0.5, (screeny * 0.45) - 30, 5, 1.0, 256, 4, 0, 1), 
                new gs_legotext("Root/Data/Art/Fonts/BionicleFontshad", gcareadirector::getscriptfluffstring(scslosifoundation::stringtoidentifier("fend"), 1, 23), screenx * 0.5, screeny * 0.45, 0, 1.0, 256, 4, 0, 1), 
                new gs_legotext("Root/Data/Art/Fonts/BionicleFontshad", "Help", screenx * 0.5, (screeny * 0.45) + 30, 5, 1.0, 256, 4, 0, 1),
                new gs_legotext("Root/Data/Art/Fonts/BionicleFontshad", gcareadirector::getscriptfluffstring(scslosifoundation::stringtoidentifier("fend"), 1, 42), screenx * 0.5, (screeny * 0.45) + 60, 5, 1.0, 256, 4, 0, 1) ];
            this.menubox = new ss_basesprite("Root/Data/Art/Menubox", 285, 130, 0, 565, 330);
            this.menubox.initfull();
            this.menubox.add();
            this.menubox.show();
            if (width == 640.000000) {
                this.menubox.setpos(178, 130, 460, 330);
            }    
            var1 = 0;
            while ((this.menustrings.__length - 1) >= var1) {
                this.menustrings[var1].initfull();
                sctilefont::setcolor(this.menustrings[var1].font, 255, 255, 255, 255);
                this.menustrings[var1].add();
                this.menustrings[var1].show();
                var1 = var1 + 1;
            }
            this.activeidx = 0;
            sctilefont::setcolor(this.menustrings[this.activeidx].font, 255, 255, 0, 255);
            this.ispaused = 1;
            this.hidden = 0;
        }
        else if (this.ispaused == 1) {
            this.ispaused = 0;
            this.unpause();
        }
        return null;
    }
    
    method unpause() {
        var var1;
        if (this.ispaused == 1) {
            gcgame::pausegame();
        }
        var1 = 0;
        while ((this.menustrings.__length - 1) >= var1) {
            this.menustrings[var1].hide();
            this.menustrings[var1] = null;
            var1 = var1 + 1;
        }
        this.menustrings = null;      
        this.menubox.hide();
        this.menubox = null;
        this.ispaused = 0;
        return null;
    }
    
    method input(param1) {
        if (this.inputenabled) {
            if (!(globalclass.level.name == "lev0")) {
                if (param1.button == 251) {
                    if (param1.event == 2) {
                        this.pause();
                    }
                }
            }
            if ((this.ispaused == 1) && (this.hidden == 0)) {
                if (param1.event == 2) {
                    if (param1.button == 38) {
                        gcstaticsoundsptrarray::playtablesound(1072);
                        sctilefont::setcolor(this.menustrings[this.activeidx].font, 255, 255, 255, 255);
                        this.activeidx = this.activeidx - 1;
                        if (this.activeidx < 0) {
                            this.activeidx = this.menustrings.__length - 1;
                        }
                        sctilefont::setcolor(this.menustrings[this.activeidx].font, 255, 255, 0, 255);
                    }
                    else if (param1.button == 40) {
                        gcstaticsoundsptrarray::playtablesound(1072);
                        sctilefont::setcolor(this.menustrings[this.activeidx].font, 255, 255, 255, 255);
                        this.activeidx = this.activeidx + 1;
                        if (this.activeidx > (this.menustrings.__length - 1)) {
                            this.activeidx = 0;
                        }
                        sctilefont::setcolor(this.menustrings[this.activeidx].font, 255, 255, 0, 255);
                    }
                    else if (param1.button == 13) {
                        gcstaticsoundsptrarray::playtablesound(1073);
                        if (this.activeidx == 0) {
                            this.unpause();
                        }
                        else if (this.activeidx == 1) {
                            globalclass.inventoryscreen.show();
                            this.hide();
                        }
                        else if (this.activeidx == 2) {
                            globalclass.helpscreen.show();
                            this.hide();
                        }
                        else if (this.activeidx == 3) {
                            this.unpause();
                            bettersaver::save();
                            globalclass.setbackflag();
                        }
                    }
                }
            }
        }
        return null;
    }
}