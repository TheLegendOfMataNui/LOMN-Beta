class lego_draggercontroller {
property dragger;
property xtarget;
property ytarget;
property ztarget;
property charx;
property chary;
property charz;
property chardir;
property sprite;
property hook;
property active;

    method lego_draggercontroller(param1, param2, param3) {
        this.draggersprite();
        this.dragger = new gs_lego_animatebigsprite(this.sprite, 0, 12, 1, param1, param2, param3, 1, 1);
        return null;
    }

    method initfull() {       
        return null;
    }

    method cleanupfull() {
        return null;
    }

    method onevent(param1) {
        return null;
    }    
    
    method process(param1) {
        if (this.active == 1) {
            this.dragger.process();
        }
        return null;
    }

    method input(param1) {
        if ((param1.event == 2) && (param1.button == 231)) {
            if (this.active == 1) {
                this.active = 0;
                this.dragger.hide();
                this.dragger.remove();
                this.dragger.cleanupfull();                
                debug::print("Active = " + (__tostring(this.active)) + ". Removing Dragger!");
            }
            if (this.active != 1) {
                this.active = 1;
                this.getcoords();
                this.dragger.initfull();
                this.dragger.add();
                this.dragger.show();
                this.dragger.animloop(0, 1);
                this.dragger.startanimate();
                this.dragger.setpos(this.charx, (this.chary + 2), this.charz);                
                debug::print("Active = " + (__tostring(this.active)) + ". Spawning Dragger!");
            }

        }
    }

    method draggersprite() {
        if (globalclass.player.actorid == "onua") {
            this.sprite = "Root/Data/Art/CLAW";
        }        
        else if (globalclass.player.actorid == "gali") {
            this.sprite = "Root/Data/Art/HOOK";
        }        
        else if (globalclass.player.actorid == "poha") {
            this.sprite = "Root/Data/Art/HAND";
        }        
        else if (globalclass.player.actorid == "kopa") {
            this.sprite = "Root/Data/Art/SWRD";
        }        
        else if (globalclass.player.actorid == "lewa") {
            this.sprite = "Root/Data/Art/AXE";
        }        
        else if (globalclass.player.actorid == "tahu") {
            this.sprite = "Root/Data/Art/SWORD";
        }        
        else if (globalclass.player.actorid == "nbua") {
            this.sprite = "Root/Data/Art/DISK";
        }
        return null;
    }

    method getcoords() {
        //Get camera orientation
        this.xtarget = gclegocamera::getforwardx(gcviewport::getcamera(gcgame::getmainview()));
        this.ytarget = gclegocamera::getforwardy(gcviewport::getcamera(gcgame::getmainview()));       
        this.ztarget = gclegocamera::getforwardz(gcviewport::getcamera(gcgame::getmainview()));

        //Get character position
        this.charx = gccharacter::getpositionx(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("cnt1")));
        this.chary = gccharacter::getpositiony(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("cnt1")));
        this.charz = gccharacter::getpositionz(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("cnt1")));
        this.chardir = gccharacter::getorientation(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("cnt1")));

        //gccharacter::setvelocity(gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("cnt1")), (90 * xtarget), (90 * ytarget), (90 * ztarget));

        debug::print("CamX = " + __tostring(this.xtarget));
        debug::print("CamY = " + __tostring(this.ytarget));
        debug::print("CamZ = " + __tostring(this.ztarget));        
        debug::print("CharX = " + __tostring(this.charx));
        debug::print("CharY = " + __tostring(this.chary));
        debug::print("CharZ = " + __tostring(this.charz));
        debug::print("CharDir = " + __tostring(this.chardir));
        return null;
    }
}