class le04_puzzle {
    property parent;
    property spiderpickup;
    property hookarray;
    
    method le04_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        globalclass.bgmusic.changefilename("Root/Data/sounds/MusicOnuaAmbience");
        globalclass.bgmusic.play();
        this.hookarray = [ new lego_moveableobject("hk01"), 
            new lego_moveableobject("hk03"), 
            new lego_moveableobject("hk05") ];
        var1 = 0;
        while ((this.hookarray.__length - 1) >= var1) {
            this.hookarray[var1].initfull();
            this.hookarray[var1].setmytargetingflags(1);
            this.hookarray[var1].setresponse(1, 1, 1);
            var1 = var1 + 1;
        }
        debug::print("********** Grappling hook is being set to 50 in length");
        globalclass.player.setgrapplinghookdistance(55);
        return null;
    }
    
    method cleanupfull() {
        var var1;
        if (!(this.spiderpickup == null)) {
            this.spiderpickup.cleanupfull();
            this.spiderpickup = null;
        }
        var1 = 0;
        while ((this.hookarray.__length - 1) >= var1) {
            this.hookarray[var1].cleanupfull();
            this.hookarray[var1] = null;
            var1 = var1 + 1;
        }
        this.hookarray = null;
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 3) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tb00")) {
                globalclass.player.kill();
            }
        }
        else if (param1.eventid == 27) {
            globalclass.player.unkill();
            globalclass.level.cam.setaimode(11);
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("tb00"), 0);
        }
        return null;
    }
    
    method input(param1) {
        if (param1.button == 90) {
            if (param1.event == 2) {
                this.cheat();
            }
        }
        return null;
    }
    
    method cheat() {
        debug::print("********** Grappling hook is being set to 50 in length");
        globalclass.player.setgrapplinghookdistance(55);
        return null;
    }
}