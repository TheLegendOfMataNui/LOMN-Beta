class strt4_puzzle {
    property parent;
    property button;
    property buttonup;
    property doortop;
    property doorbottom;
    property dooropen;
    property tiggerboxid;
    property camposnum;
    property cinema;
    property killedbytrigerbox;
    
    method strt4_puzzle(param1) {
        this.parent = param1;
        this.buttonup = 1;
        this.dooropen = 0;
        return null;
    }
    
    method initfull() {
        var hive1handle;
        var hive2handle;
        var tohunga;
        if (gcsaver::isconditionset(4194304) == 0) {
            tohunga = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("vlgr"), 0);
            gccharacter::settohunga(tohunga, rgba(255, 255, 255, 255), rgba(122, 254, 255, 255), scslosifoundation::stringtoidentifier("mk0a"));
            gccharacter::setinputstate(tohunga, scslosifoundation::stringtoidentifier("none"));
            gccharacter::switchanimation(tohunga, scslosifoundation::stringtoidentifier("d003"), -1);
            gccharacter::setorientation(tohunga, -42);
        }
        else {
            gcmodeldirector::hide(scslosifoundation::stringtoidentifier("vlgr"), 0);
        }
        this.doortop = new lego_moveableobject("drt1");
        this.doortop.initfull();
        this.doorbottom = new lego_moveableobject("drb1");
        this.doorbottom.initfull();
        this.button = new lego_moveableobject("sw00");
        this.button.initfull();
        this.setupstartingpositions();
        this.tiggerboxid = 0;
        this.camposnum = 0;
        hive1handle = gcareadirector::gethive(scslosifoundation::stringtoidentifier("ghv0"));
        gchive::setmaxcreatures(hive1handle, 2);
        gchive::setcreaturetype(hive1handle, scslosifoundation::stringtoidentifier("lsrp"));
        gchive::setspawnrate(hive1handle, 4);
        hive2handle = gcareadirector::gethive(scslosifoundation::stringtoidentifier("ghv1"));
        gchive::setmaxcreatures(hive2handle, 2);
        gchive::setcreaturetype(hive2handle, scslosifoundation::stringtoidentifier("lsrp"));
        gchive::setspawnrate(hive2handle, 4);
        this.killedbytrigerbox = 0;
        if (gcsaver::findcinema(scslosifoundation::stringtoidentifier("cin1")) == 0) {
            this.cinema = gccinemaengine::create();
            gccinemaengine::load(this.cinema, "cin1");
            gccinemaengine::play(this.cinema);
        }
        return null;
    }
    
    method cleanupfull() {
        if (this.doortop != null) {
            this.doortop.cleanupfull();
            this.doortop = null;
        }
        if (this.doorbottom != null) {
            this.doorbottom.cleanupfull();
            this.doorbottom = null;
        }
        if (this.button != null) {
            this.button.cleanupfull();
            this.button = null;
        }
        this.cinema = null;
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method input(param1) {
        if ((param1.event == 2) && (param1.button == 251)) {
            if (this.cinema != null) {
                gccinemaengine::stop(this.cinema);
            }
        }
        return null;
    }
    
    method onevent(param1) {
        var var1;
        if (param1.eventid == 1) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) {
                if (param1.args[1] == scslosifoundation::stringtoidentifier("sw00")) {
                    this.hitswitch();
                }
            }
        }
        else if (param1.eventid == 3) {
            var1 = param1.args[0];
            if (((var1 == scslosifoundation::stringtoidentifier("tb00")) || (var1 == scslosifoundation::stringtoidentifier("tb01"))) || (var1 == scslosifoundation::stringtoidentifier("tb02"))) {
                this.killedbytrigerbox = 1;
                globalclass.player.kill();
                this.parent.level.cam.setaimode(7);
                gcstaticsoundsptrarray::playtablesound(1048);
                globalclass.player.actor.setinputstate("none");
                this.tiggerboxid = var1;
            }
        }
        else if (param1.eventid == 27) {
            if (this.killedbytrigerbox) {
                this.killedbytrigerbox = 0;
                this.resetcharacterposition();
            }
            globalclass.player.unkill();
            gccollisionphysicsgroup::toggletriggerboxentered(this.tiggerboxid, 0);
            this.parent.level.cam.setaimode(11);
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("k000"));
            globalclass.player.actor.setinputstate("ninp");
        }
        else if (param1.eventid == 46) {
            gccollisionphysicsgroup::spinmask(1.2);
        }
        else if (param1.eventid == 14) {
            if (this.camposnum == 0) {
                this.camposnum = 1;
                this.secondcaminterp();
            }
            else if (this.camposnum == 1) {
                this.parent.level.cam.setaimode(11);
                this.parent.level.cam.resetviewport();
            }
            else if (this.camposnum == 10) {
                this.parent.level.cam.setaimode(11);
            }
        }
        else if (param1.eventid == 30) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cin1")) {
                globalclass.bgmusic.changefilename("Root/Data/sounds/MusicKopakaAmbience");
                globalclass.bgmusic.play();
                globalclass.player.maskcontrol.changemask(2);
            }
        }
        return null;
    }
    
    method resetcharacterposition() {
        if (this.tiggerboxid == scslosifoundation::stringtoidentifier("tb00")) {
            globalclass.player.actor.setpos(146.3, -346, 1683.7);
            globalclass.player.actor.setorientation(270);
        }
        else if (this.tiggerboxid == scslosifoundation::stringtoidentifier("tb01")) {
            globalclass.player.actor.setpos(203.5, -402, 1887.9);
            globalclass.player.actor.setorientation(-146);
        }
        else if (this.tiggerboxid == scslosifoundation::stringtoidentifier("tb02")) {
            globalclass.player.actor.setpos(176.1, 0 - 336.1, 1601.4);
            globalclass.player.actor.setorientation(0 - 174.3);
        }
        return null;
    }
    
    method hitswitch() {
        if (this.buttonup) {
            this.buttonup = 0;
            this.button.changeposition(0, 0 - 1.2, 0, 1);
            this.button.setresponse(0, 0, 0);
            this.startcam();
            globalclass.player.actor.setpos(127.3, -270, 1606);
            globalclass.player.actor.setorientation(140);
        }
        return null;
    }
    
    method startcam() {
        this.camposnum = 0;
        this.parent.level.cam.scaletocutscene();
        this.parent.level.cam.setpos(138.16, 0 - 274.25, 1605.6);
        this.parent.level.cam.settargetpos(56, -207, 1675);
        this.parent.level.cam.interpolate(216.8, 0 - 307.7, 1552.7, 226, -320, 1508, 4.0);
        return null;
    }
    
    method secondcaminterp() {
        this.parent.level.cam.interpolate(119.96, 0 - 265.92, 1614.7, 226, -320, 1508, 2.0);
        this.opendoors();
        return null;
    }
    
    method setupstartingpositions() {
        if (this.dooropen) {
            this.button.changeposition(0, 0 - 1.2, 0, 0);
            this.button.setresponse(0, 0, 0);
            this.opendoors();
        }
        return null;
    }
    
    method opendoors() {
        this.dooropen = 1;
        this.doortop.changeposition(0, 7, 0, 3);
        this.doortop.setresponse(0, 0, 0);
        this.doorbottom.changeposition(0, -5, 0, 3);
        this.doorbottom.setresponse(0, 0, 0);
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
}