class ta106_puzzle {
    property parent;
    property fallingballs;
    property fallingballsubound;
    property bl00coords;
    property bl01coords;
    property bl02coords;
    property bl03coords;
    property bl04coords;
    property bl05coords;
    property bl06coords;
    property bl07coords;
    property bl08coords;
    property bl09coords;
    property bl10coords;
    property bl11coords;
    property bl12coords;
    property bl13coords;
    property bl14coords;
    property bl15coords;
    property bl16coords;
    property bl17coords;
    property bl18coords;
    property bl19coords;
    property bl20coords;
    property bl21coords;
    property bl22coords;
    property bl23coords;
    property bl24coords;
    property bl25coords;
    property bl26coords;
    property bl27coords;
    property bl28coords;
    property bl29coords;
    property bl30coords;
    property bl31coords;
    property bl32coords;
    property bl33coords;
    property bl34coords;
    property bl35coords;
    property bl36coords;
    property timerarray;
    property startsecondhalftimer;
    
    method ta106_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        gcareadirector::setnearestmax(50);
        this.setsurfmode(1);
        globalclass.player.actor.addpart("tahu/surf", "surf");
        globalclass.bgmusic.changefilename("Root/Data/sounds/MUSICTAHUTHEME");
        globalclass.bgmusic.play(1);
        this.fallingballs = [  ];
        this.timerarray = [ ]; // Create empty array
        var i = 0; // Stores which iteration of the loop we are in
        while (i < 37) {
            var timername = "wt";
            // We need to pad the single digit timers with an extra '0',
            // so that 'wt2' becomes 'wt02'
            if (i <= 9) {
                timername = timername + "0";
            }
            timername = timername + __tostring(i);
            this.timerarray.__append(new lego_timer(timername, globalclass.randnum.getrandomfloat(3.0, 4.5), 0));
            i = i + 1;
        } 
        var1 = 0;
        while ((this.timerarray.__length - 1) >= var1) {
            this.timerarray[var1].initfull();
            var1 = var1 + 1;
        }
        var1 = 0;
        while ((this.fallingballs.__length - 1) >= var1) {
            this.fallingballs[var1].initfull();
            this.fallingballs[var1].setresponse(1, 1, 1);
            this.fallingballs[var1].setmoveable(null, null, 0, 0, 0, 0);
            this.fallingballs[var1].setbouncefactor(0.25);
            var1 = var1 + 1;
        }
        var1 = 0;
        while ((this.fallingballs.__length - 1) >= var1) {
            this.fallingballs[var1].setmoveableflags(1, 1, 0, 1);
            var1 = var1 + 1;
        }
        this.fallingballsubound = this.fallingballs.__length - 1;
        this.startsecondhalftimer = new lego_timer("sect", 1.75, 0);
        this.startsecondhalftimer.initfull();
        return null;
    }
    
    method show() {
        var var1;
        var1 = 0;
        while (36 >= var1) {
            this.timerarray[var1].reset(0);
            this.timerarray[var1].start();
            var1 = var1 + 2;
        }
        this.startsecondhalftimer.reset(0);
        this.startsecondhalftimer.start();
        return null;
    }
    
    method cleanupfull() {
        var var1;
        this.setsurfmode(0);
        globalclass.settestforlavacollisions(1);
        if (this.fallingballs != null) {
            var1 = 0;
            while ((this.fallingballs.__length - 1) >= var1) {
                this.fallingballs[var1].cleanupfull();
                this.fallingballs[var1] = null;
                var1 = var1 + 1;
            }
            this.fallingballs = null;
        }
        this.fallingballsubound = null;
        if (this.timerarray != null) {
            var1 = 0;
            while ((this.timerarray.__length - 1) >= var1) {
                this.timerarray[var1].cleanupfull();
                this.timerarray[var1] = null;
                var1 = var1 + 1;
            }
            this.timerarray = null;
        }
        if (this.startsecondhalftimer != null) {
            this.startsecondhalftimer.cleanupfull();
            this.startsecondhalftimer = null;
        }
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method onevent(param1) {
        var var1;
        if (param1.eventid == 1) {
            var1 = 0;
            while (this.fallingballsubound >= var1) {
                if (param1.args[1] == this.fallingballs[var1].id) {
                    debug::print("You hit a fire ball........" + __tostring(this.fallingballs[var1].name));
                    globalclass.player.actor.react(0, 3, this.fallingballs[var1].id);
                    globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("t038"));
                }
                var1 = var1 + 1;
            }
        }
        else if (param1.eventid == 8) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("sect")) {
                var1 = 1;
                while (35 >= var1) {
                    this.timerarray[var1].reset(0);
                    this.timerarray[var1].start();
                    var1 = var1 + 2;
                }
            }
        }
        else if (param1.eventid == 42) {
            
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb00"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb01"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb02"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb03"), 0);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("sb04"), 0);
            this.setsurfmode(1);
        }
        return null;
    }
    
    method input(param1) {
        return null;
    }
    
    method setsurfmode(param1) {
        if (param1) {
            globalclass.player.actor.setsurfingability(0.9, 0.8);
            globalclass.player.actor.setsurfmaxspeed(60.0);
            globalclass.player.actor.setsurfminspeed(30.0);
            globalclass.player.actor.setsurfdrag(0.00001);
            globalclass.player.actor.setsurffallgravity(1.0);
            globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("t038"));
        }
        else {
            globalclass.player.actor.setsurfingability(0.0, 0.0);
            globalclass.player.actor.removepart("surf");
            globalclass.player.actor.setsplitanimation(scslosifoundation::stringtoidentifier("t000"));
            globalclass.player.actor.setforwardvelocity(0.0);
        }
        return null;
    }
}