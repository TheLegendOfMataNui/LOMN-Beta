class bech2_puzzle {
    property parent;
    property waterburstarray;
    property timerarray;
    property grapplingpivot;
    property kn00coords;
    property kn01coords;
    property kn02coords;
    property kn03coords;
    property kn04coords;
    property kn05coords;
    property kn06coords;
    property kn07coords;
    property waterburstarrayubound;
    property maskoftranslation;
    property grapplingareaplatforms;
    property gatestone;
    
    method bech2_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        var var2;
        var var3;
        var var4;
        var var5;
        var var6;
        var var7;
        var var8;
        var var10;
        globalclass.bgmusic.changefilename("Root/Data/sounds/MUSICGALIAmbience");
        globalclass.bgmusic.play();
        this.grapplingpivot = new lego_moveableobject("hk01");
        this.grapplingpivot.initfull();
        this.grapplingpivot.setmytargetingflags(1);
        this.grapplingpivot.setresponse(1, 1, 1);
        this.grapplingareaplatforms = [ new lego_moveableobject("pr07"), 
            new lego_moveableobject("pr08"), 
            new lego_moveableobject("pr09") ];
        this.waterburstarray = [ new lego_moveableobject("kn00"), 
            new lego_moveableobject("kn01"), 
            new lego_moveableobject("kn02"), 
            new lego_moveableobject("kn03"), 
            new lego_moveableobject("kn04"), 
            new lego_moveableobject("kn05"), 
            new lego_moveableobject("kn06"), 
            new lego_moveableobject("kn07") ];
        this.waterburstarrayubound = this.waterburstarray.__length - 1;
        var1 = globalclass.randnum.getrandomfloat(6.0, 7.5);
        var2 = globalclass.randnum.getrandomfloat(6.0, 7.5);
        var3 = globalclass.randnum.getrandomfloat(6.0, 7.5);
        var4 = globalclass.randnum.getrandomfloat(6.0, 7.5);
        var5 = globalclass.randnum.getrandomfloat(6.0, 7.5);
        var6 = globalclass.randnum.getrandomfloat(6.0, 7.5);
        var7 = globalclass.randnum.getrandomfloat(6.0, 7.5);
        var8 = globalclass.randnum.getrandomfloat(6.0, 7.5);
        this.timerarray = [ new lego_timer("wbt0", var1, 0), 
            new lego_timer("wbt1", var2, 0), 
            new lego_timer("wbt2", var3, 0), 
            new lego_timer("wbt3", var4, 0), 
            new lego_timer("wbt4", var5, 0), 
            new lego_timer("wbt5", var6, 0), 
            new lego_timer("wbt6", var7, 0), 
            new lego_timer("wbt7", var8, 0) ];
        var10 = 0;
        while ((this.waterburstarray.__length - 1) >= var10) {
            this.waterburstarray[var10].initfull();
            this.waterburstarray[var10].setresponse(2, 2, 2);
            this.waterburstarray[var10].setmoveable(null, null, 0, 0, 0, 0);
            this.waterburstarray[var10].setalpha(0.0);
            var10 = var10 + 1;
        }
        var10 = 0;
        while ((this.timerarray.__length - 1) >= var10) {
            this.timerarray[var10].initfull();
            var10 = var10 + 1;
        }
        var10 = 0;
        while ((this.grapplingareaplatforms.__length - 1) >= var10) {
            this.grapplingareaplatforms[var10].initfull();
            this.grapplingareaplatforms[var10].setresponse(1, 0, 1);
            this.grapplingareaplatforms[var10].settweakable();
            var10 = var10 + 1;
        }
        this.kn00coords = new basicpoint(this.waterburstarray[0].getx(), this.waterburstarray[0].gety(), this.waterburstarray[0].getz());
        this.kn01coords = new basicpoint(this.waterburstarray[1].getx(), this.waterburstarray[1].gety(), this.waterburstarray[1].getz());
        this.kn02coords = new basicpoint(this.waterburstarray[2].getx(), this.waterburstarray[2].gety(), this.waterburstarray[2].getz());
        this.kn03coords = new basicpoint(this.waterburstarray[3].getx(), this.waterburstarray[3].gety(), this.waterburstarray[3].getz());
        this.kn04coords = new basicpoint(this.waterburstarray[4].getx(), this.waterburstarray[4].gety(), this.waterburstarray[4].getz());
        this.kn05coords = new basicpoint(this.waterburstarray[5].getx(), this.waterburstarray[5].gety(), this.waterburstarray[5].getz());
        this.kn06coords = new basicpoint(this.waterburstarray[6].getx(), this.waterburstarray[6].gety(), this.waterburstarray[6].getz());
        this.kn07coords = new basicpoint(this.waterburstarray[7].getx(), this.waterburstarray[7].gety(), this.waterburstarray[7].getz());

        //Setting up the Kanohi Rau
        if (gcsaver::findmask(scslosifoundation::stringtoidentifier("mk9a")) == 0) {
            this.maskoftranslation = new lego_pickup("mk9a", 9, 1, "item", 2, 1);
            this.maskoftranslation.initfull();
            this.maskoftranslation.show();
        }

        //Set up the gatestone
        if (gcsaver::finditem(scslosifoundation::stringtoidentifier("gstn")) == 0) {
            this.gatestone = new lego_pickup("gstn", 0, 5, "item", 7, 1);
            this.gatestone.initfull();
            this.gatestone.show();
            this.gatestone.setcondition(262144);
            this.gatestone.setquest(3);
        }
        else {
            this.gatestone = new lego_moveableobject("gstn");
            this.gatestone.initfull();
            this.gatestone.hide();
        }
        return null;
    }
    
    method show() {
        var var1;
        this.grapplingareaplatforms[0].setposition(0 - 131.42, 394.63, 0 - 297.83);
        this.grapplingareaplatforms[1].setposition(0 - 149.1, 395.98, 0 - 313.19);
        this.grapplingareaplatforms[2].setposition(0 - 167.17, 399.17, 0 - 325.96);
        var1 = 0;
        while ((this.timerarray.__length - 1) >= var1) {
            this.timerarray[var1].reset(0);
            this.timerarray[var1].start();
            var1 = var1 + 1;
        }
        return null;
    }
    
    method cleanupfull() {
        var var1;
        if (this.waterburstarray != null) {
            var1 = 0;
            while ((this.waterburstarray.__length - 1) >= var1) {
                this.waterburstarray[var1].cleanupfull();
                this.waterburstarray[var1] = null;
                var1 = var1 + 1;
            }
            this.waterburstarray = null;
        }
        if (this.timerarray != null) {
            var1 = 0;
            while ((this.timerarray.__length - 1) >= var1) {
                this.timerarray[var1].cleanupfull();
                this.timerarray[var1] = null;
                var1 = var1 + 1;
            }
            this.timerarray = null;
        }
        if (this.grapplingpivot != null) {
            this.grapplingpivot.cleanupfull();
            this.grapplingpivot = null;
        }
        if (this.kn00coords != null) {
            this.kn00coords.cleanupfull();
            this.kn00coords = null;
        }
        if (this.kn01coords != null) {
            this.kn01coords.cleanupfull();
            this.kn01coords = null;
        }
        if (this.kn02coords != null) {
            this.kn02coords.cleanupfull();
            this.kn02coords = null;
        }
        if (this.kn03coords != null) {
            this.kn03coords.cleanupfull();
            this.kn03coords = null;
        }
        if (this.kn04coords != null) {
            this.kn04coords.cleanupfull();
            this.kn04coords = null;
        }
        if (this.kn05coords != null) {
            this.kn05coords.cleanupfull();
            this.kn05coords = null;
        }
        if (this.kn06coords != null) {
            this.kn06coords.cleanupfull();
            this.kn06coords = null;
        }
        if (this.kn07coords != null) {
            this.kn07coords.cleanupfull();
            this.kn07coords = null;
        }
        this.waterburstarrayubound = null;
        if (this.maskoftranslation != null) {
            this.maskoftranslation.cleanupfull();
            this.maskoftranslation = null;
        }
        if (this.gatestone != null) {
            this.gatestone.cleanupfull();
            this.gatestone = null;
        }
        if (this.grapplingareaplatforms != null) {
            var1 = 0;
            while ((this.grapplingareaplatforms.__length - 1) >= var1) {
                this.grapplingareaplatforms[var1].cleanupfull();
                this.grapplingareaplatforms[var1] = null;
                var1 = var1 + 1;
            }
            this.grapplingareaplatforms = null;
        }
        return null;
    }
    
    method process(param1) {
        var var1;
        var1 = 0;
        while (this.waterburstarrayubound >= var1) {
            if (this.waterburstarray[var1].gety() <= 710.0) {
                this.waterburstarray[var1].setalpha(1.0);
            }
            if (this.waterburstarray[var1].gety() <= 514.73) {
                this.waterburstarray[var1].setposition(60.0, 170.0, 855.0);
            }
            var1 = var1 + 1;
        }
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 8) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("wbt0")) {
                this.waterburstarray[0].setalpha(0.0);
                this.waterburstarray[0].setposition(this.kn00coords);
                this.waterburstarray[0].setmoveableflags(1, 0, 0, 0);
                this.waterburstarray[0].setvelocity(25, -40, 25);
                this.timerarray[0].reset(0);
                this.timerarray[0].start();
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("wbt1")) {
                this.waterburstarray[1].setalpha(0.0);
                this.waterburstarray[1].setposition(this.kn01coords);
                this.waterburstarray[1].setmoveableflags(1, 0, 0, 0);
                this.waterburstarray[1].setvelocity(25, -40, 25);
                this.timerarray[1].reset(0);
                this.timerarray[1].start();
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("wbt2")) {
                this.waterburstarray[2].setalpha(0.0);
                this.waterburstarray[2].setposition(this.kn02coords);
                this.waterburstarray[2].setmoveableflags(1, 0, 0, 0);
                this.waterburstarray[2].setvelocity(25, -40, 25);
                this.timerarray[2].reset(0);
                this.timerarray[2].start();
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("wbt3")) {
                this.waterburstarray[3].setalpha(0.0);
                this.waterburstarray[3].setposition(this.kn03coords);
                this.waterburstarray[3].setmoveableflags(1, 0, 0, 0);
                this.waterburstarray[3].setvelocity(25, -40, 25);
                this.timerarray[3].reset(0);
                this.timerarray[3].start();
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("wbt4")) {
                this.waterburstarray[4].setalpha(0.0);
                this.waterburstarray[4].setposition(this.kn04coords);
                this.waterburstarray[4].setmoveableflags(1, 0, 0, 0);
                this.waterburstarray[4].setvelocity(25, -40, 25);
                this.timerarray[4].reset(0);
                this.timerarray[4].start();
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("wbt5")) {
                this.waterburstarray[5].setalpha(0.0);
                this.waterburstarray[5].setposition(this.kn05coords);
                this.waterburstarray[5].setmoveableflags(1, 0, 0, 0);
                this.waterburstarray[5].setvelocity(25, -40, 25);
                this.timerarray[5].reset(0);
                this.timerarray[5].start();
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("wbt6")) {
                this.waterburstarray[6].setalpha(0.0);
                this.waterburstarray[6].setposition(this.kn06coords);
                this.waterburstarray[6].setmoveableflags(1, 0, 0, 0);
                this.waterburstarray[6].setvelocity(25, -40, 25);
                this.timerarray[6].reset(0);
                this.timerarray[6].start();
            }
            else if (param1.args[0] == scslosifoundation::stringtoidentifier("wbt7")) {
                this.waterburstarray[7].setalpha(0.0);
                this.waterburstarray[7].setposition(this.kn07coords);
                this.waterburstarray[7].setmoveableflags(1, 0, 0, 0);
                this.waterburstarray[7].setvelocity(25, -40, 25);
                this.timerarray[7].reset(0);
                this.timerarray[7].start();
            }
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            globalclass.player.actor.setunderwater(0);
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("g000"));
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
        }
        return null;
    }
    
    method input(param1) {
        return null;
    }

    method exit() {
        this.parent = null;
        return null;
    }
}