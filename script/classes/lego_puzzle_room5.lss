class lego_puzzle_room5 {
    property parent;
    property door1;
    property door2;
    property hittriggerplaneonce;
    property callev_safe_time_once;
    property glyph;
    property hiveinc;
    
    method lego_puzzle_room5(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        var var2;
        var var3;
        var var4;
        this.hiveinc = 0;
        globalclass.bgmusic.changefilename("Root/Data/sounds/MUSICLEWATHEME");
        globalclass.bgmusic.play();
        this.door1 = new lego_moveableobject("dr01");
        this.door1.initfull();
        this.door1.settweakable();
        this.door2 = new lego_moveableobject("dr02");
        this.door2.initfull();
        this.door2.settweakable();
        this.hittriggerplaneonce = 1;
        this.callev_safe_time_once = 1;
        var1 = gcareadirector::gethive(scslosifoundation::stringtoidentifier("fhv0"));
        gchive::setmaxcreatures(var1, 2);
        gchive::setcreaturetype(var1, scslosifoundation::stringtoidentifier("bats"));
        gchive::setspawnrate(var1, 4);
        var2 = gcareadirector::gethive(scslosifoundation::stringtoidentifier("fhv1"));
        gchive::setmaxcreatures(var2, 2);
        gchive::setcreaturetype(var2, scslosifoundation::stringtoidentifier("bats"));
        gchive::setspawnrate(var2, 4);
        var3 = gcareadirector::gethive(scslosifoundation::stringtoidentifier("ghv0"));
        gchive::setmaxcreatures(var3, 2);
        gchive::setcreaturetype(var3, scslosifoundation::stringtoidentifier("lsrp"));
        gchive::setspawnrate(var3, 4);
        var4 = gcareadirector::gethive(scslosifoundation::stringtoidentifier("ghv1"));
        gchive::setmaxcreatures(var4, 2);
        gchive::setcreaturetype(var4, scslosifoundation::stringtoidentifier("lsrp"));
        gchive::setspawnrate(var4, 4);
        if (gcsaver::findglyph(scslosifoundation::stringtoidentifier("glyp")) == 0) {
            this.glyph = new lego_pickup("glyp", 16, 2, "item", 3, 1);
            this.glyph.initfull();
            this.glyph.show();
        }
        return null;
    }
    
    method initshort() {
        this.callev_safe_time_once = 1;
        this.hittriggerplaneonce = 1;
        globalclass.level.cam.setaimode(11);
        globalclass.player.unkill();
        globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
        return null;
    }
    
    method cleanupfull() {
        if (this.glyph != null) {
            this.glyph.cleanupfull();
            this.glyph = null;
        }
        if (this.door1 != null) {
            this.door1.cleanupfull();
            this.door1 = null;
        }
        if (this.door2 != null) {
            this.door2.cleanupfull();
            this.door2 = null;
        }
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 44) {
            if (this.callev_safe_time_once) {
                if (this.parent.enterstartid == scslosifoundation::stringtoidentifier("str1")) {
                    
                }
                else {
                    this.opendoor1();
                    this.opendoor2();
                }
                globalclass.player.actor.setorientation(180);
                this.callev_safe_time_once = 0;
            }
        }
        else if (param1.eventid == 51) {
            if (param1.args[1] == 1) {
                this.hiveinc = this.hiveinc + 1;
                if (this.hiveinc >= 4) {
                    debug::print("****************************** CONGRATS YOU SOLVED THE PUZZLE ***********************8");
                    this.opendoor2();
                }
            }
            else if (param1.args[1] == 0) {
                debug::print("********* YEAH YOU HAVE KILLED A HIVE!!");
            }
        }
        else if (param1.eventid == 4) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tp02")) {
                if (this.hittriggerplaneonce) {
                    this.closedoor1();
                    this.closedoor2();
                    this.hittriggerplaneonce = 0;
                }
            }
        }
        else if (param1.eventid == 46) {
            globalclass.level.cam.setaimode(7);
            gccollisionphysicsgroup::spinmask(1.2);
        }
        else if (param1.eventid == 27) {
            this.initshort();
        }
        return null;
    }
    
    method input(param1) {
        if (param1.button == 90) {
            if (param1.event == 2) {
                this.closedoor1();
            }
        }
        if (param1.button == 88) {
            if (param1.event == 2) {
                this.closedoor2();
            }
        }
        if (param1.button == 67) {
            if (param1.event == 2) {
                this.opendoor1();
            }
        }
        if (param1.button == 86) {
            if (param1.event == 2) {
                this.opendoor2();
            }
        }
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
    
    method closedoor1() {
        var var1;
        var var2;
        var var3;
        debug::print("****************** CLOSING DOOR1");
        var1 = this.door1.getx();
        var2 = this.door1.gety();
        var3 = this.door1.getz();
        this.door1.interpolate(var1, 14.0, var3, 1.0);
        return null;
    }
    
    method closedoor2() {
        var var1;
        var var2;
        var var3;
        debug::print("****************** CLOSING DOOR2");
        var1 = this.door2.getx();
        var2 = this.door2.gety();
        var3 = this.door2.getz();
        this.door2.interpolate(var1, 14.0, var3, 1.0);
        return null;
    }
    
    method opendoor1() {
        var var1;
        var var2;
        var var3;
        debug::print("******************* OPENING DOOR1");
        var1 = this.door1.getx();
        var2 = this.door1.gety();
        var3 = this.door1.getz();
        this.door1.interpolate(var1, 24.0, var3, 1.0);
        return null;
    }
    
    method opendoor2() {
        var var1;
        var var2;
        var var3;
        debug::print("******************* OPENING DOOR2");
        var1 = this.door2.getx();
        var2 = this.door2.gety();
        var3 = this.door2.getz();
        this.door2.interpolate(var1, 24.0, var3, 1.0);
        return null;
    }
}