class hydr_puzzle {
    property parent;
    property hydr;
    property isdead;
    property stone;
    property hasstone;
    property desctext;
    property howtotext;
    property showintro;
    
    method hydr_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        var var2;
        var var3;
        var var4;
        var var5;
        gcareadirector::setfog(-9143565, 0 - 1000.0, 0 - 2400.0, 0.01);
        gclightdirector::setcavelighting(0);
        gcareadirector::setnearestmax(20);
        if (gcsaver::finditem(scslosifoundation::stringtoidentifier("ston")) == 0) {
            this.stone = new lego_pickup("ston", 0, 4, "item", 9, 0);
            this.stone.initfull();
            this.stone.show();
            gcareadirector::hide(scslosifoundation::stringtoidentifier("ston"), scslosifoundation::stringtoidentifier("hydr"));
        }
        this.hasstone = 0;
        var3 = scslosifoundation::stringtoidentifier("hydr");
        gcmodeldirector::addboss(var3);
        gcmodeldirector::show(var3, var3);
        this.hydr = gchydraboss::gethydraboss();
        this.isdead = 0;
        GcHydraBoss::Idle(3);
        var4 = gcareadirector::gethive(scslosifoundation::stringtoidentifier("hv01"));
        gchive::setcreaturetype(var4, scslosifoundation::stringtoidentifier("crb1"));
        gchive::setspawnrate(var4, 240);
        var5 = gcareadirector::gethive(scslosifoundation::stringtoidentifier("hv02"));
        gchive::setcreaturetype(var5, scslosifoundation::stringtoidentifier("crb1"));
        gchive::setspawnrate(var5, 240);
        var3 = gcareadirector::getscriptstring(scslosifoundation::stringtoidentifier("boss"), 2, 0);
        this.desctext = new gs_legotext("Root/Data/Art/Fonts/BionicleFontHi", var3, screenx * 0.5, screeny - 130, 0, 1, 256, 0, 0);
        this.desctext.initfull();
        var4 = (screeny - 100) + 20;
        var3 = gcareadirector::getscriptstring(scslosifoundation::stringtoidentifier("boss"), 2, 1);
        this.howtotext = new gs_legotext("Root/Data/Art/Fonts/BionicleFont", var3, screenx * 0.5, var4, 0, 1, 256, 0, 0);
        this.howtotext.initfull();
        this.showintro = 0;
        this.playintro();
        return null;
    }
    
    method playintro() {
        this.showintro = 1;
        this.parent.level.cam.makespline("Root/Data/Levels/lev2/hydr/hydr_CAM.slb");
        this.parent.level.cam.setspline(0, 10.0, 1, 0);
        this.parent.level.cam.setaimode(2);
        this.parent.level.cam.settargetpos(77, 10, 10);
        this.parent.level.cam.scaletocutscene();
        this.desctext.add();
        this.desctext.show();
        this.howtotext.add();
        this.howtotext.show();
        globalclass.hud.hide();
        GcHydraBoss::Idle(10);
        return null;
    }
    
    method playextro() {
        return null;
    }
    
    method cleanupfull() {
        var var1;
        this.hydr = null;
        if (this.isdead == 0) {
            var1 = scslosifoundation::stringtoidentifier("hydr");
            gcmodeldirector::remove(var1, var1);
        }
        if (this.stone != null) {
            this.stone.cleanupfull();
            this.stone = null;
        }
        return null;
    }
    
    method process(param1) {
        return null;
    }
    
    method initshort() {
        return null;
    }
    
    method resetplayer() {
        gchydraboss::reset(this.hydr);
        GcHydraBoss::Idle(3);
        return null;
    }
    
    method onevent(param1) {       
        if (param1.eventid == 7) {
            if (param1.args[2] == scslosifoundation::stringtoidentifier("eBEG")) {
                gcbaseboss::emitterbegin(gcmodeldirector::getboss(scslosifoundation::stringtoidentifier("hydr")), param1.args[4], param1.args[5]);
            }
            if (param1.args[2] == scslosifoundation::stringtoidentifier("eEND")) {
                gcbaseboss::emitterend(gcmodeldirector::getboss(scslosifoundation::stringtoidentifier("hydr")), param1.args[4], param1.args[5]);
            }
        }
        else if (param1.eventid == 43) {
            if (this.isdead == 0) {
                this.isdead = 1;
            }
        }
        else if (param1.eventid == 41) {
            gchydraboss::finishconversation(this.hydr);
        }
        else if (param1.eventid == 27) {
            this.resetplayer();
        }
        else if (param1.eventid == 39) {
            this.hasstone = 1;
            globalclass.setnextlevel("lev3", 1);
        }
        else if (param1.eventid == 6) {
            this.parent.level.cam.setaimode(11);
            this.parent.level.cam.resetviewport();
            globalclass.hud.show();
            this.desctext.hide();
            this.howtotext.hide();
            GcHydraBoss::Idle(3);
        }
        return null;
    }
    
    method input(param1) {
        return null;
    }
    
    method exit() {
        return null;
    }
}