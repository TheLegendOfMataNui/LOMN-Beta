class gs_lego_printscreenmenu : base_object {
    property items;
    property pointer;
    property bgart;
    property startx;
    property starty;
    property xchange;
    property ychange;
    property maxlines;
    property lineposition;
    
    method gs_lego_printscreenmenu(param1) {
        this.items = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        var var2;
        var var3;
        var var4;
        var var5;
        var var6;
        this.startx = screenx * 0.25;
        this.starty = screeny * 0.15;
        var1 = this.startx;
        var2 = this.starty;
        this.xchange = 0;
        this.ychange = 40;
        this.maxlines = 10;
        var3 = 0;
        while ((this.items.__length - 1) >= var3) {
            var4 = new gs_legoactivetext("Root/Data/Art/Fonts/BionicleFont", "Root/Data/Art/Fonts/BionicleFontHi", this.items[var3], var1, var2, 1, 2.0, 0, 4, 0);
            this.items[var3] = var4;
            this.items[var3].initfull();
            this.items[var3].add();
            var1 = var1 + this.xchange;
            var2 = var2 + this.ychange;
            var3 = var3 + 1;
        }
        if (this.items.__length < this.maxlines) {
            this.maxlines = this.items.__length;
        }
        var3 = 0;
        while ((this.maxlines - 1) >= var3) {
            var5 = var3;
            this.items[var5].show();
            var3 = var3 + 1;
        }
        this.pointer = 0;
        this.lineposition = 0;
        this.items[this.pointer].setactive();
        var6 = 1;
        return null;
    }
    
    method initshort() {
        this.initfull();
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var1 = 0;
        while ((this.items.__length - 1) >= var1) {
            this.items[var1].hide();
            this.items[var1].remove();
            this.items[var1].cleanupfull();
            this.items[var1] = null;
            var1 = var1 + 1;
        }
        this.items = null;
        return null;
    }
    
    method cleanupshort() {
        this.cleanupfull();
        return null;
    }
    
    method input(param1) {
        if (param1.button == 9) {
            if (param1.event == 2) {
                this.setpointer(-1);
            }
        }
        if (param1.button == 12) {
            if (param1.event == 2) {
                this.setpointer(1);
            }
        }
        if (param1.button == 37) {
            if (param1.event == 2) {
                this.setpointer(-1);
            }
        }
        if (param1.button == 38) {
            if (param1.event == 2) {
                this.setpointer(-1);
            }
        }
        if (param1.button == 39) {
            if (param1.event == 2) {
                this.setpointer(1);
            }
        }
        if (param1.button == 40) {
            if (param1.event == 2) {
                this.setpointer(1);
            }
        }
        return null;
    }
    
    method setpointer(param1) {
        this.items[this.pointer].setinactive();
        if (param1 == -1) {
            if ((this.pointer - 1) < 0) {
                this.pointer = this.items.__length - 1;
            }
            else {
                this.pointer = this.pointer - 1;
            }
        }
        else if (param1 == 1) {
            if ((this.pointer + 1) > (this.items.__length - 1)) {
                this.pointer = 0;
            }
            else {
                this.pointer = this.pointer + 1;
            }
        }
        this.items[this.pointer].setactive();
        gcstaticsoundsptrarray::playtablesound(1072);
        return null;
    }
    
    method hideall() {
        var var1;
        var1 = 0;
        while ((this.items.__length - 1) >= var1) {
            this.items[var1].hide();
            var1 = var1 + 1;
        }
        return null;
    }
}