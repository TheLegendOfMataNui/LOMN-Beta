class hudtokens : base_objectarray {
    property tcount;
    property tidx;
    property cidx;
    
    method hudtokens() {
        return null;
    }
    
    method initfull() {
        var var1;
        this.tcount = 0;
        this.tidx = 0;
        this.cidx = 2;
        var1 = screenx - 184;
        this.base_objectarray([ new gs_lego_animatesprite("Root/data/art/pickups/onuatoken/onua_token", 0, 29, 1, var1, 20, 0, var1 + 64, 84), 
            new gs_legotext("Root/Data/Art/Fonts/BionicleFont", "X", (var1 + 64) + 5, 52, 0, 1.2, 0, 4, 0), 
            new gs_legotext("Root/Data/Art/Fonts/BionicleFont", "0", ((var1 + 64) + 5) + 32, 52, 0, 1.7, 0, 4, 0) ]);
        this.items[0].initfull();
        this.items[1].initfull();
        this.items[2].initfull();
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var var2;
        if (!(this.items == null)) {
            var1 = this.items.__length - 1;
            var2 = 0;
            while (var1 >= var2) {
                this.items[var1 - var2].hide();
                this.items[var1 - var2].remove();
                this.items[var1 - var2].cleanupfull();
                this.items[var1 - var2] = null;
                var2 = var2 + 1;
            }
            this.items = null;
        }
        return null;
    }
    
    method setcolor() {
        if (globalclass.player.actorid == "onua") {
            
        }
        else if (globalclass.player.actorid == "gali") {
            this.items[0].setcolor(0, 0, 255, 255);
        }
        else if (globalclass.player.actorid == "poha") {
            this.items[0].setcolor(225, 190, 116, 255);
        }
        else if (globalclass.player.actorid == "kopa") {
            
        }
        else if (globalclass.player.actorid == "lewa") {
            this.items[0].setcolor(0, 255, 0, 255);
        }
        else if (globalclass.player.actorid == "tahu") {
            this.items[0].setcolor(255, 0, 0, 255);
        }
        else if (globalclass.player.actorid == "nbua") {
            this.items[0].setcolor(122, 0, 122, 255);
        }
        return null;
    }
    
    method initshort() {
        this.tcount = 0;
        return null;
    }
    
    method cleanupshort() {
        this.hide();
        return null;
    }
    
    method add() {
        this.items[0].add();
        this.items[1].add();
        this.items[2].add();
        return null;
    }
    
    method show() {
        if (globalclass.hud.hidden == 0) {
            this.items[0].show();
            this.items[1].show();
            this.items[2].show();
            this.items[this.tidx].enablealphachannel(1);
            this.items[this.tidx].startanimate();
        }
        return null;
    }
    
    method hide() {
        var var1;
        var1 = 0;
        while (2 >= var1) {
            this.items[var1].hide();
            var1 = var1 + 1;
        }
        return null;
    }
    
    method changepos(param1) {
        return null;
    }
    
    method setxpos(param1) {
        return null;
    }
    
    method addtoken(param1) {
        this.tcount = this.tcount + param1;
        return null;
    }
    
    method removetoken(param1) {
        this.tcount = this.tcount - param1;
        return null;
    }
    
    method settokens(param1) {
        this.tcount = param1;
        return null;
    }
    
    method input(param1) {
        return null;
    }
    
    method process(param1) {
        if (this.tcount < 10) {
            this.items[this.cidx].setstring("00" + __tostring(this.tcount));
        }
        else if (this.tcount < 100) {
            this.items[this.cidx].setstring("0" + __tostring(this.tcount));
        }
        else {
            this.items[this.cidx].setstring(__tostring(this.tcount));
        }
        this.items[this.tidx].process(param1);
        return null;
    }
    
    method slide(param1) {
        return null;
    }
}