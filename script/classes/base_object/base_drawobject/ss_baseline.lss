class ss_baseline : base_drawobject {
    property z1;
    property z2;
    property mycolor;
    property myline;
    property lident;
    
    method ss_baseline(param1, param2, param3, param4, param5, param6, param7, param8) {
        if (!(param1 == null)) {
            this.x1 = param1;
        }
        else {
            this.x1 = 0;
        }
        if (!(param2 == null)) {
            this.y1 = param2;
        }
        else {
            this.y1 = 0;
        }
        if (!(param4 == null)) {
            this.x2 = param4;
        }
        else {
            this.x2 = 0;
        }
        if (!(param5 == null)) {
            this.y2 = param5;
        }
        else {
            this.y2 = 0;
        }
        if (!(param3 == null)) {
            this.z1 = param3;
        }
        else {
            this.z1 = 0;
        }
        if (!(param6 == null)) {
            this.z2 = param6;
        }
        else {
            this.z2 = 0;
        }
        if (!(param7 == null)) {
            this.mycolor = param7;
        }
        else {
            this.mycolor = rgba(255, 255, 255, 255);
        }
        if (!(param8 == null)) {
            this.w = param8;
        }
        else {
            this.w = 0;
        }
        return null;
    }
    
    method initfull() {
        this.myline = gcline::create();
        gcline::setposition(this.myline, this.x1, this.y1, this.z1, this.x2, this.y2, this.z2);
        gcline::setcolor(this.myline, this.mycolor);
        gcline::setwidth(this.myline, this.w);
        return null;
    }
    
    method initshort() {
        this.initfull();
        return null;
    }
    
    method cleanupfull() {
        this.myline = null;
        return null;
    }
    
    method cleanupshort() {
        this.myline = null;
        return null;
    }
    
    method add() {
        this.lident = gchuddirector::addline(this.myline);
        return null;
    }
    
    method show() {
        gchuddirector::show(this.lident);
        this.onscreen = 1;
        return null;
    }
    
    method hide() {
        gchuddirector::hide(this.lident);
        this.onscreen = 0;
        return null;
    }
    
    method remove() {
        gchuddirector::remove(this.lident);
        return null;
    }
    
    method setpos(param1, param2, param3, param4, param5, param6) {
        if (!(param1 == null)) {
            this.x1 = param1;
        }
        if (!(param4 == null)) {
            this.x2 = param4;
        }
        if (!(param2 == null)) {
            this.y1 = param2;
        }
        if (!(param5 == null)) {
            this.y2 = param5;
        }
        if (!(param3 == null)) {
            this.z1 = param3;
        }
        if (!(param6 == null)) {
            this.z2 = param6;
        }
        gcline::setposition(this.myline, this.x1, this.y1, this.z1, this.x2, this.y2, this.z2);
        return null;
    }
    
    method changepos(param1, param2, param3, param4, param5, param6) {
        if (!(param1 == null)) {
            this.x1 = this.x1 + param1;
        }
        if (!(param4 == null)) {
            this.x2 = this.x2 + param4;
        }
        if (!(param2 == null)) {
            this.y1 = this.y1 + param2;
        }
        if (!(param5 == null)) {
            this.y2 = this.y2 + param5;
        }
        if (!(param3 == null)) {
            this.z1 = this.z1 + param3;
        }
        if (!(param6 == null)) {
            this.z2 = this.z2 + param6;
        }
        gcline::setposition(this.myline, this.x1, this.y1, this.z1, this.x2, this.y2, this.z2);
        return null;
    }
    
    method setcolor(param1, param2, param3, param4) {
        if (!(param1 == null)) {
            this.mycolor = this.mycolor.__withred(param1);
        }
        if (!(param2 == null)) {
            this.mycolor = this.mycolor.__withgreen(param2);
        }
        if (!(param3 == null)) {
            this.mycolor = this.mycolor.__withblue(param3);
        }
        if (!(param4 == null)) {
            this.mycolor = this.mycolor.__withalpha(param4);
        }
        gcline::setcolor(this.myline, this.mycolor);
        return null;
    }
    
    method changecolor(param1, param2, param3, param4) {
        if (!(param1 == null)) {
            this.mycolor = this.mycolor.__withred(this.mycolor.__red + param1);
        }
        if (!(param2 == null)) {
            this.mycolor = this.mycolor.__withgreen(this.mycolor.__green + param2);
        }
        if (!(param3 == null)) {
            this.mycolor = this.mycolor.__withblue(this.mycolor.__blue + param3);
        }
        if (!(param4 == null)) {
            this.mycolor = this.mycolor.__withalpha(this.mycolor.__alpha + param4);
        }
        gcline::setcolor(this.myline, this.mycolor);
        return null;
    }
    
    method setwidth(param1) {
        if (!(param1 == null)) {
            this.w = param1;
        }
        gcline::setwidth(this.myline, this.w);
        return null;
    }
    
    method changewidth(param1) {
        if (!(param1 == null)) {
            this.w = this.w + param1;
        }
        gcline::setwidth(this.myline, this.w);
        return null;
    }
}