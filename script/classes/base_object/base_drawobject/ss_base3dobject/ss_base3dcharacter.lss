class ss_base3dcharacter : ss_base3dobject {
    property numanimations;
    property gepetto;
    property currentanimation;
    property boneindex;
    
    method ss_base3dcharacter(assigned_id, char_id, orientation, x_pos, y_pos, z_pos, input_state) {
        this.charstring = char_id;
        this.contstring = assigned_id;
        if (orientation == null) {
            this.angle = 0.0;
        }
        else {
            this.angle = orientation;
        }
        if (x_pos == null) {
            this.x1 = 0.0;
        }
        else {
            this.x1 = x_pos;
        }
        if (y_pos == null) {
            this.y1 = 0.0;
        }
        else {
            this.y1 = y_pos;
        }
        if (z_pos == null) {
            this.z = 0.0;
        }
        else {
            this.z = z_pos;
        }
        if (input_state == null) {
            this.inputstate = "none";
        }
        else {
            this.inputstate = input_state;
        }
        this.currentanimation = 0;
        return null;
    }
    
    method add() {
        var var1;
        gcmodeldirector::addcharacter(this.charstring, this.charname, scslosifoundation::stringtoidentifier(this.inputstate), this.contid);
        this.handle = gcmodeldirector::getcharacter(this.contid);
        this.setpos(this.x1, this.y1, this.z);
        this.setorientation(this.angle);
        this.setinputstate(this.inputstate);
        var1 = gccharacter::hasgepetto(this.handle);
        if (var1 == 1) {
            this.gepetto = gccharacter::getgepetto(this.handle);
            this.numanimations = this.getnumanimations();
        }
        return null;
    }
    
    method setinputstate(param1) {
        var var1;
        var1 = scslosifoundation::stringtoidentifier(param1);
        gcmodeldirector::setinputstate(this.contid, var1);
        return null;
    }
    
    method getnumanimations() {
        this.numanimations = gclegogepetto::getnumanims(this.gepetto);
        return this.numanimations;
    }
    
    method getanimid(param1) {
        var var1;
        if ((param1 < this.numanimations) && (param1 >= 0)) {
            var1 = gclegogepetto::getanimidfromnumber(this.gepetto, param1);
        }
        else {
            var1 = 0;
        }
        return var1;
    }
    
    method switchanimation(param1) {
        gccharacter::switchanimation(this.handle, param1);
        this.currentanimation = param1;
        return null;
    }
    
    method disableanimation(param1) {
        gccharacter::disablecharacteranimation(this.handle, param1);
        this.currentanimation = param1;
        return null;
    }
    
    method enableanimation(param1) {
        gccharacter::enablecharacteranimation(this.handle, param1);
        this.currentanimation = param1;
        return null;
    }
    
    method play() {
        gclegogepetto::play(this.gepetto);
        return null;
    }
    
    method stop() {
        gclegogepetto::stop(this.gepetto);
        return null;
    }
    
    method pause() {
        gclegogepetto::pause(this.gepetto);
        return null;
    }
    
    method startattime(param1) {
        gclegogepetto::startattime(this.gepetto, param1);
        return null;
    }
    
    method startatframe(param1) {
        gclegogepetto::startatframe(this.gepetto, param1);
        return null;
    }
    
    method gettime() {
        var var1;
        var1 = gclegogepetto::gettime(this.gepetto);
        return var1;
    }
    
    method getframe() {
        var var1;
        var1 = gclegogepetto::getframe(this.gepetto);
        return var1;
    }
    
    method getduration() {
        var var1;
        var1 = gclegogepetto::getduration(this.gepetto);
        return var1;
    }
    
    method getnumframes() {
        var var1;
        var1 = gclegogepetto::getnumframes(this.gepetto);
        return var1;
    }
    
    method disablecollisions() {
        gccharacter::disablecollisions(this.handle);
        return null;
    }
    
    //Takes the raw string name of the bone, such as Dummy21, Bip01_L_Clavicle, etc.
    //Note that this currently crashes with non-bipeds for unknown reasons
    method getbonepos(bone_name_string) {
        var bone_name = scslosifoundation::hashstring(bone_name_string);
        var bone_x = gccharacter::getbonex(this.handle, bone_name);
        var bone_y = gccharacter::getboney(this.handle, bone_name);
        var bone_z = gccharacter::getbonez(this.handle, bone_name);
        return new ss_point(bone_x, bone_y, bone_z);
    }
    
    method getboneindex(bone_name_string) {
        var bone = scslosifoundation::hashstring(bone_name_string);
        this.boneindex = gccharacter::getboneindex(this.handle, bone);
        debug::print("Index of specified bone: " + __tostring(this.boneindex));
        return this.boneindex;
    }
    
    //Function no longer exists
    method setteamid(param1) {
        gccharacter::setteamid(this.handle, param1);
        return null;
    }
    
    //Function no longer exists
    method getteamid() {
        return gccharacter::getteamid(this.handle);
    }
}