class ss_animatesprite : ss_changesprite {
    property framesanimating;
    property animatingonflag;
    property framecount;
    
    method ss_animatesprite(filepath, first_frame, last_frame, frames_animating, left_side_pos, top_side_pos, z_coord, right_side_pos, bottom_side_pos) {
        this.filename = filepath;
        this.first = first_frame;
        this.last = last_frame;
        this.framesanimating = frames_animating;
        if (left_side_pos != null) {
            this.x1 = left_side_pos;
        }
        else {
            this.x1 = 0;
        }
        if (top_side_pos != null) {
            this.y1 = top_side_pos;
        }
        else {
            this.y1 = 0;
        }
        if (z_coord != null) {
            this.z = z_coord;
        }
        else {
            this.z = 0;
        }
        if (right_side_pos != null) {
            this.x2 = right_side_pos;
        }
        else {
            this.x2 = 0;
        }
        if (bottom_side_pos != null) {
            this.y2 = bottom_side_pos;
        }
        else {
            this.y2 = 0;
        }
        return null;
    }
    
    method initfull() {
        var var1;
        var var2;
        var sprite;
        this.spritearray = [  ];
        var1 = this.first;
        while (this.last >= var1) {
            if (var1 < 10) {
                var2 = ((this.filename + "000") + __tostring(var1)) + ".tga";
            }
            if ((var1 >= 10) && (var1 < 100)) {
                var2 = ((this.filename + "00") + __tostring(var1)) + ".tga";
            }
            if ((var1 >= 100) && (var1 < 1000)) {
                var2 = ((this.filename + "0") + __tostring(var1)) + ".tga";
            }
            if ((var1 >= 1000) && (var1 < 10000)) {
                var2 = (this.filename + __tostring(var1)) + ".tga";
            }
            sprite = new ss_basesprite(var2, this.x1, this.y1, this.z, this.x2, this.y2);
            sprite.initfull();
            this.spritearray.__append(sprite);
            var1 = var1 + 1;
        }
        this.currentsprite = 0;
        this.framecount = 0;
        this.animatingonflag = 0;
        return null;
    }
    
    method show() {
        this.spritearray[this.currentsprite].show();
        return null;
    }
    
    method hide() {
        this.spritearray[this.currentsprite].hide();
        return null;
    }
    
    method startanimate() {
        this.spritearray[this.currentsprite].hide();
        this.currentsprite = 0;
        this.animatingonflag = 1;
        return null;
    }
    
    method pauseanimate(param1) {
        if (param1 == null) {
            this.animatingonflag = 0;
        }
        else {
            this.spritearray[this.currentsprite].hide();
            this.currentsprite = param1;
            this.spritearray[this.currentsprite].show();
            this.animatingonflag = 0;
        }
        return null;
    }
    
    method stopanimate() {
        this.spritearray[this.currentsprite].hide();
        this.animatingonflag = 0;
        return null;
    }
    
    method process(param1) {
        if (this.animatingonflag == 1) {
            if (param1.callcount == 1) {
                this.framecount = this.framecount + 1;
                if (this.framecount == this.framesanimating) {
                    this.spritearray[this.currentsprite].hide();
                    if (this.currentsprite == (this.spritearray.__length - 1)) {
                        this.currentsprite = 0;
                    }
                    else {
                        this.currentsprite = this.currentsprite + 1;
                    }
                    this.spritearray[this.currentsprite].show();
                    this.framecount = 0;
                }
            }
        }
        return null;
    }
    
    method input(param1) {
        return null;
    }
}