class puzzle_man3 {
    property parent;
    property bridge;
    
    method puzzle_man3(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull(param1) {
        var var1;
        var var2;
        globalclass.bgmusic.changefilename("Root/Data/sounds/Musiclowandcreepyambience");
        globalclass.bgmusic.play();				
        if (globalclass.player.actorid != "wair") {
            globalclass.player.changetoa("wair");
            gccollisionphysicsgroup::settoaposition(scslosifoundation::stringtoidentifier("str0"), scslosifoundation::stringtoidentifier("lok0"));
        }
        this.bridge = [
            new lego_volatileplatform("prt1"),
            new lego_volatileplatform("prt2"),
            new lego_volatileplatform("prt3"),
            new lego_volatileplatform("prt4"),
            new lego_volatileplatform("prt5") ];
        var2 = 0;
        while ((this.bridge.__length - 1) >= var2) {
            this.bridge[var2].initfull();
            this.bridge[var2].settimetofall(1.2);
            this.bridge[var2].setshakebobbleintensity(1.2);
            this.bridge[var2].show();
            var2 = var2 + 1;
        }
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var var2;
        if (this.bridge != null) {
            var1 = this.bridge.__length - 1;
            var2 = 0;
            while (var1 >= var2) {
                this.bridge[var1 - var2].cleanupfull();
                this.bridge[var1 - var2] = null;
                var2 = var2 + 1;
            }
            this.bridge = null;
        }
        return null;
    }

    method exit() {
        this.parent = null;
        return null;
    }
    
    method onevent(param1) {
        var var1;
        if (param1.eventid == 4) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cine")) {
                globalclass.bgmusic.stop();
                gchuddirector::playcinematic("Root/Data/cinematics/ToaKaitaFight.bik", 1);
                gcbagroup::setswitchareas(scslosifoundation::stringtoidentifier("onua"), scslosifoundation::stringtoidentifier("str0"), scslosifoundation::stringtoidentifier("lok0"));
            }
        }
        else if (param1.eventid == 3) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("tb00")) {
                globalclass.player.kill();
                gcstaticsoundsptrarray::playtablesound(1048);
                this.parent.level.cam.setaimode(7);
                globalclass.player.actor.setinputstate("none");
            }
        }
        else if (param1.eventid == 46) {
            gccollisionphysicsgroup::spinmask(1.2);
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            globalclass.player.actor.setinputstate("ninp");
            this.parent.level.cam.setaimode(11);
            gccollisionphysicsgroup::toggletriggerboxentered(scslosifoundation::stringtoidentifier("tb00"), 0);
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("wa00"));
            var1 = 0;
            while ((this.bridge.__length - 1) >= var1) {
                this.bridge[var1].reset();
                var1 = var1 + 1;
            }
        }
        if (!(this.bridge == null)) {
            var1 = 0;
            while ((this.bridge.__length - 1) >= var1) {
                this.bridge[var1].onevent(param1);
                var1 = var1 + 1;
            }
        }
        return null;
    }
}