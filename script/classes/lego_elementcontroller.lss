class lego_elementcontroller {
    property elements;
    property currentelement;
    property currentidx;
    property active;
    
    method lego_elementcontroller() {
        return null;
    }
    
    method initfull() {
        this.elements = null;
        this.active = 0;
        this.currentelement = null;
        this.currentidx = null;
        return null;
    }
    
    method cleanupfull() {
        var var1;
        var var2;
        if (!(this.elements == null)) {
            var1 = this.elements.__length - 1;
            var2 = 0;
            while (var1 >= var2) {
                this.elements[var1 - var2].cleanupfull();
                this.elements[var1 - var2] = null;
                var2 = var2 + 1;
            }
        }
        this.currentelement = null;
        this.currentidx = null;
        this.active = null;
        return null;
    }
    
    method initshort() {
        return null;
    }
    
    method cleanupshort() {
        var var1;
        if (!(this.elements == null)) {
            var1 = 0;
            while ((this.elements.__length - 1) >= var1) {
                this.elements[var1].setselectable(0);
                var1 = var1 + 1;
            }
        }
        this.currentelement = null;
        this.currentidx = null;
        this.active = 0;
        return null;
    }
    
    method addallelements() {
        gctoa::findglyph(globalclass.player.actor.toahandle);
        this.elements = [  ];
        if (scslosifoundation::stringtoidentifier(globalclass.player.actor.charname) == scslosifoundation::stringtoidentifier("onua")) {
            this.elements.__append(new element(4));
            this.setselectable(4, 1);
        }
        else if (scslosifoundation::stringtoidentifier(globalclass.player.actor.charname) == scslosifoundation::stringtoidentifier("gali")) {
            this.elements.__append(new element(7));
        }
        else if (scslosifoundation::stringtoidentifier(globalclass.player.actor.charname) == scslosifoundation::stringtoidentifier("poha")) {
            this.elements.__append(new element(10));
        }
        else if (scslosifoundation::stringtoidentifier(globalclass.player.actor.charname) == scslosifoundation::stringtoidentifier("kopa")) {
            this.elements.__append(new element(13));
        }
        else if (scslosifoundation::stringtoidentifier(globalclass.player.actor.charname) == scslosifoundation::stringtoidentifier("lewa")) {
            this.elements.__append(new element(16));
        }
        else if (scslosifoundation::stringtoidentifier(globalclass.player.actor.charname) == scslosifoundation::stringtoidentifier("tahu")) {
            this.elements.__append(new element(19));
        }
        scslosifoundation::stringtoidentifier(globalclass.player.actor.charname);
        this.elements[0].add();
        return null;
    }
    
    method input(param1) {
        return null;
    }
    
    method getelement() {
        return this.currentelement;
    }
    
    method getcurrentidx() {
        return this.currentidx;
    }
    
    method getdrainrate() {
        if (!(this.currentelement == null)) {
            return this.elements[this.currentidx].powerdrainrate;
        }
        else {
            return 0;
        }
        return null;
    }
    
    method isactive(param1) {
        if (this.elements == null) {
            return 0;
        }
        else if ((param1 == null) || (param1 > (this.elements.__length - 1))) {
            return 0;
        }
        else {
            return this.elements[param1].isactive();
        }
        return null;
    }
    
    method isselectable(param1) {
        var var1;
        var var2;
        var1 = 0;
        if (!(param1 == null) && !(this.elements == null)) {
            var2 = 0;
            while ((this.elements.__length - 1) >= var2) {
                if ((this.elements[var2].elementname == param1) && (this.elements[var2].selectable == 1)) {
                    var1 = 1;
                }
                var2 = var2 + 1;
            }
        }
        return var1;
    }
    
    method setselectable(param1, param2) {
        var var1;
        if (!(this.elements == null)) {
            if (param2 == null) {
                param2 = 1;
            }
            var1 = 0;
            while ((this.elements.__length - 1) >= var1) {
                if (this.elements[var1].elementname == param1) {
                    this.elements[var1].setselectable(param2);
                    if (this.currentelement == null) {
                        this.changeelement(param1);
                    }
                }
                var1 = var1 + 1;
            }
        }
        return null;
    }
    
    method changeelement(param1) {
        var var1;
        globalclass.hud.element.touch();
        if (!(this.elements == null)) {
            var1 = 0;
            while ((this.elements.__length - 1) >= var1) {
                if (this.elements[var1].elementname == param1) {
                    if (this.elements[var1].selectable == 1) {
                        this.currentidx = var1;
                        this.currentelement = param1;
                        globalclass.hud.element.selectelement(this.currentidx);
                        if (globalclass.player.energy > this.elements[this.currentidx].powerdrainrate) {
                            
                        }
                        else {
                            debug::print("Not enough energy. Setting glyph anim to nothing\n");
                        }
                        return 1;
                    }
                    else {
                        return 0;
                    }
                }
                var1 = var1 + 1;
            }
        }
        return 0;
    }
    
    method nextelement(param1) {
        var var1;
        var var2;
        if (!(this.elements == null)) {
            if (param1 == null) {
                var1 = 1;
            }
            if (!(this.currentidx == null)) {
                var2 = this.currentidx;
                do {
                    if (param1 == 1) {
                        var2 = var2 + 1;
                        if (var2 > (this.elements.__length - 1)) {
                            var2 = 0;
                        }
                    }
                    else {
                        var2 = var2 - 1;
                        if (var2 < 0) {
                            var2 = this.elements.__length - 1;
                        }
                    }
                } while (!!(this.changeelement(this.elements[var2].elementname) == 0))
            }
        }
        return null;
    }
    
    method activate() {
        if (!(this.elements == null)) {
            this.elements[this.currentidx].activate();
            globalclass.hud.element.touch();
        }
        return null;
    }
    
    method deactivate() {
        if (!(this.elements == null)) {
            if ((this.elements.__length - 1) >= 2) {
                this.elements[2].deactivate();
            }
            globalclass.hud.element.touch();
        }
        return null;
    }
}