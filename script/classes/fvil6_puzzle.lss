class fvil6_puzzle {
    property parent;
    property leverpickup;
    property hookarray;
    property coindoor;
    property coindoortext1;
    property coindoortext2;
    property coindoortexttimer;
    property showcoindoor;
    
    method fvil6_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var var1;
        var door_text;
        if (gcsaver::finditem(scslosifoundation::stringtoidentifier("levr")) == 0) {
            this.leverpickup = new lego_pickup("levr", 0, 5, "item", 5, 1);
            this.leverpickup.initfull();
            this.leverpickup.setquest(2);
            this.leverpickup.show();
            this.leverpickup.setcondition(65536);
        }
        else {
            this.leverpickup = new lego_moveableobject("levr");
            this.leverpickup.initfull();
            this.leverpickup.hide();
        }
        gclightdirector::setcavelighting(0);
        gcareadirector::setfog(-4513246, 0 - 1.0, 0 - 900.0, 0.05);
        globalclass.bgmusic.changefilename("Root/Data/sounds/MUSICLEGOUNDERGROUND");
        globalclass.bgmusic.play(1);
        globalclass.player.setgrapplinghookdistance(150);
        this.hookarray = [ new lego_moveableobject("hot0"), 
            new lego_moveableobject("hot1"), 
            new lego_moveableobject("hot2"), 
            new lego_moveableobject("hot3"), 
            new lego_moveableobject("hot4") ];
        var1 = 0;
        while ((this.hookarray.__length - 1) >= var1) {
            this.hookarray[var1].initfull();
            this.hookarray[var1].setmytargetingflags(1);
            this.hookarray[var1].setresponse(1, 1, 1);
            this.hookarray[var1].settweakable();
            var1 = var1 + 1;
        }
        this.coindoor = new lego_moveableobject("door");
        this.coindoor.initfull();
        if (bettersaver::getbooleanvalue(57) == 0) {
            this.showcoindoor = 1;
            this.coindoor.show();
            this.coindoor.setalpha(0.8);
        }
        else {
            this.coindoor.hide();
        }

        //Set Door Text
        this.coindoortext1 = new gs_legotext("Root/Data/Art/Fonts/BionicleFontHi", gcareadirector::getscriptfluffstring(scslosifoundation::stringtoidentifier("door"), 1, 0) +  gcareadirector::getscriptfluffstring(scslosifoundation::stringtoidentifier("door"), 1, 3), screenx * 0.5, screeny * 0.70, 0, 1.5, 256, 4, 0);
        this.coindoortext2 = new gs_legotext("Root/Data/Art/Fonts/BionicleFontHi", "8 " + gcareadirector::getscriptfluffstring(scslosifoundation::stringtoidentifier("door"), 1, 4), screenx * 0.5, screeny * 0.75, 0, 1.5, 256, 4, 0);
        this.coindoortext1.initfull();
        this.coindoortext2.initfull();
        this.coindoortext1.add();
        this.coindoortext2.add();
        this.coindoortexttimer = 0.0;

        return null;
    }
    
    method cleanupfull() {
        var var1;
        if (this.leverpickup != null) {
            this.leverpickup.cleanupfull();
            this.leverpickup = null;
        }
        if (this.hookarray != null) {
            var1 = 0;
            while ((this.hookarray.__length - 1) >= var1) {
                this.hookarray[var1].cleanupfull();
                this.hookarray[var1] = null;
                var1 = var1 + 1;
            }
            this.hookarray = null;
        }
        globalclass.player.setgrapplinghookdistance(45);
        if (this.coindoortext1 != null) {
            this.coindoortext1.remove();
            this.coindoortext1.cleanupfull();
            this.coindoortext1 = null;
        }
        if (this.coindoortext2 != null) {
            this.coindoortext2.remove();
            this.coindoortext2.cleanupfull();
            this.coindoortext2 = null;
        }
        if (this.coindoor != null) {
            this.coindoor.cleanupfull();
            this.coindoor = null;
        }
        return null;
    }
    
    method process(param1) {
        if (this.coindoortexttimer > 0) {
            this.coindoortexttimer = this.coindoortexttimer - param1.deltatime;
        }
        else if (this.coindoortext1.onscreen == 1) {
            this.coindoortext1.hide();
            this.coindoortext2.hide();
        }
        return null;
    }
    
    method onevent(param1) {
        if (param1.eventid == 1) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("cnt1")) {
                if (param1.args[1] == scslosifoundation::stringtoidentifier("door")) {
                    if (this.showcoindoor == 1) {
                        if ((globalclass.player.tokens >= 8) && (globalclass.player.actor.ishookenabled) && (gcsaver::isconditionset(4194304))) {
                            this.coindoor.fadeout(1.5);
                            gcstaticsoundsptrarray::playtablesound(1084);
                            this.showcoindoor = 0;
                            this.coindoortext1.hide();
                            this.coindoortext2.hide();
                        }
                        else {
                            this.coindoortext1.show();
                            this.coindoortext2.show();
                            this.coindoortexttimer = 1.0;
                        }
                    }
                }
            }
        }
        else if (param1.eventid == 35) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("door")) {
                bettersaver::setbooleanvalue(57, 1);
                this.coindoor.hide();
            }
        }
        else if (param1.eventid == 27) {
            globalclass.player.actor.gotopos(this.parent.enterstartid, this.parent.enterlookid);
            globalclass.player.unkill();
            globalclass.player.actor.setinputstate("ninp");
            globalclass.player.actor.switchanimation(scslosifoundation::stringtoidentifier("t000"));
            this.parent.level.cam.setaimode(11);
        }
        return null;
    }
    
    method input(param1) {
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }
}