class shrn4_puzzle {
    property parent;
    property bossdoor;
    property portalactive;
    property bossdoortext;
    property bossdoortexttimer;
    property showbossdoor;
    
    method shrn4_puzzle(param1) {
        this.parent = param1;
        return null;
    }
    
    method initfull() {
        var nuju;
        var portal_trigger;
        var door_text;
        gcareadirector::setnearestmax(10);
        this.bossdoor = new lego_moveableobject("etdr", this.parent.name);
        this.bossdoor.initfull();
        if (bettersaver::getbooleanvalue(68) == 0) {
            this.showbossdoor = 1;
            this.bossdoor.show();
            this.bossdoor.setalpha(0.3);
        }
        else {
            this.bossdoor.hide();
        }
        nuju = gcmodeldirector::getcharacter(scslosifoundation::stringtoidentifier("nuju"), 0);
        gccharacter::setinputstate(nuju, scslosifoundation::stringtoidentifier("none"));
        gccharacter::switchanimation(nuju, scslosifoundation::stringtoidentifier("nu00"), -1);
        portal_trigger = scslosifoundation::stringtoidentifier("tps9");
        this.portalactive = gcsaver::portalactive();
        if (this.portalactive == 1) {
            gccollisionphysicsgroup::setportal(portal_trigger, "root/data/art/portals/kopa/village_ripple/k_prtl", 1);
        }
        else {
            gccollisionphysicsgroup::turnoffnextarea(portal_trigger);
        }
        door_text = gcareadirector::getscriptfluffstringuint(scslosifoundation::stringtoidentifier("door"), 1, 0, 60);
        this.bossdoortext = new gs_legotext("Root/Data/Art/Fonts/BionicleFontHi", door_text, screenx * 0.5, screeny * 0.83, 0, 1.5, 256, 4, 0);
        this.bossdoortext.initfull();
        this.bossdoortext.add();
        this.bossdoortexttimer = 0.0;
        return null;
    }
    
    method cleanupfull() {
        if (this.bossdoor != null) {
            this.bossdoor.cleanupfull();
            this.bossdoor = null;
        }
        if (this.bossdoortext != null) {
            this.bossdoortext.remove();
            this.bossdoortext.cleanupfull();
            this.bossdoortext = null;
        }
        return null;
    }
    
    method onevent(param1) {
        var portal_trigger;
        if (param1.eventid == 41) {
            if (this.portalactive == 0) {
                portal_trigger = scslosifoundation::stringtoidentifier("tps9");
                gccollisionphysicsgroup::turnonnextarea(portal_trigger, scslosifoundation::stringtoidentifier("tura"));
                gccollisionphysicsgroup::setportal(portal_trigger, "root/data/art/portals/kopa/village_ripple/k_prtl", 1);
                this.portalactive = 1;
            }
        }
        else if (param1.eventid == 1) {
            if (param1.args[1] == scslosifoundation::stringtoidentifier("etdr")) {
                if (this.showbossdoor == 1) {
                    if (((((globalclass.player.tokens >= 60) && (globalclass.player.maskcontrol.isselectable(3) && (globalclass.player.maskcontrol.isselectable(11)) && (globalclass.player.actor.ishookenabled) && (globalclass.player.haselement())))))) {
                        this.bossdoor.fadeout(1.5);
                        gcstaticsoundsptrarray::playtablesound(1084);
                        this.showbossdoor = 0;
                        this.bossdoortext.hide();
                    }
                    else {
                        this.bossdoortext.show();
                        this.bossdoortexttimer = 1.0;
                    }
                }
            }
        }
        else if (param1.eventid == 35) {
            if (param1.args[0] == scslosifoundation::stringtoidentifier("etdr")) {
                bettersaver::setbooleanvalue(68, 1);
                this.bossdoor.hide();
            }
        }
        return null;
    }
    
    method exit() {
        this.parent = null;
        return null;
    }

    method process(param1) {
        if (this.bossdoortexttimer > 0) {
            this.bossdoortexttimer = this.bossdoortexttimer - param1.deltatime;
        }
        else if (this.bossdoortext.onscreen == 1) {
            this.bossdoortext.hide();
        }
        return null;
    }

    method input(param1) {
        return null;
    }
}